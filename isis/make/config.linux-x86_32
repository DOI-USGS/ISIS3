#---------------------------------------------------------------------------
# Compiler options
#---------------------------------------------------------------------------
CXX           = g++
CC            = gcc
ISISCPPFLAGS  = -Wall
ISISCPPFLAGS += -ansi
ISISCPPFLAGS += -DISIS_LITTLE_ENDIAN=1
ISISCPPFLAGS += -fPIC
ISISCPPFLAGS += -DGMM_USES_SUPERLU

ifeq ($(findstring DEBUG, $(MODE)),DEBUG)
  ISISCPPFLAGS += -g
  ISISCPPFLAGS += -O0
  ifeq ($(findstring CWD, $(MODE)),CWD)
    ISISCPPFLAGS += -DCWDEBUG -DLIBCWD_THREAD_SAFE -D_REENTRANT
    ifeq (,$(findstring MEMCHECK, $(MODE)))
      ISISCPPFLAGS += -DNOMEMCHECK
    endif
  endif
else
  ISISCPPFLAGS += -O1
endif

ISISCFLAGS =

#---------------------------------------------------------------------------
# Linker options
#---------------------------------------------------------------------------
RANLIB          = /bin/true
SHAREDLIBEXT    = so

ISISLDFLAGS  = -Wl,-E -Xlinker '-z' -Xlinker 'origin'
ISISLDFLAGS += -Xlinker "-rpath" -Xlinker "${ISISROOT}/lib:${ISISROOT}/3rdParty/lib"
ISISSYSLIBS =
ISISSTATIC  = -Wl,-Bstatic
ISISDYNAMIC = -Wl,-Bdynamic

ifeq ($(findstring DEBUG, $(MODE)),DEBUG)
  ifeq ($(findstring CWD, $(MODE)),CWD)
    ISISSYSLIBS += -lcwd_r -pthread
  endif
endif

#---------------------------------------------------------------------------
# Shared library options
#---------------------------------------------------------------------------
ISISSHAREDFLAGS = $(ISISLDFLAGS) -shared
ISISSHAREDON    = -Wl,-whole-archive
ISISSHAREDOFF   = -Wl,-no-whole-archive
ISISARFLAGS     =

#---------------------------------------------------------------------------
# Set up local library designations
#---------------------------------------------------------------------------
ISIS3SYSINC ?= /usr/include
ISIS3SYSLIB ?= /usr/lib
ISIS3LOCAL  ?= /usgs/pkgs/local/$(ISISLOCALVERSION)

#---------------------------------------------------------------------------
# Set up for cwd
#---------------------------------------------------------------------------
CWDINCDIR =
CWDLIBDIR =
CWDLIB    =

ifeq ($(findstring DEBUG, $(MODE)),DEBUG)
  ifeq ($(findstring CWD, $(MODE)),CWD)
    CWDINCDIR = -I$(ISIS3LOCAL)/include/libcwd/libcwd-1.0.4
    CWDLIBDIR = -L$(ISIS3LOCAL)/lib
    CWDLIB    = -lcwd_r
  endif
endif

#---------------------------------------------------------------------------
# Set up for Qt
#---------------------------------------------------------------------------
QTINCDIR = -I$(ISIS3LOCAL)/include/qt/qt4.6.2
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/Qt
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtChrats
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtCore
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtAssistant
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtGui
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtNetwork
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtScript
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtScriptTools
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtSql
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtSvg
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtTest
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtWebKit
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtXml
QTINCDIR += -I$(ISIS3LOCAL)/include/qt/qt4.6.2/QtXmlPatterns
QTLIBDIR = -L$(ISIS3LOCAL)/lib
QTLIB    = -lQtXmlPatterns -lQtXml -lQtNetwork -lQtSql -lQtGui -lQtCore -lQtSvg -lQtTest -lQtOpenGL -lQtWebKit

UIC      = $(ISIS3LOCAL)/bin/uic
MOC      = $(ISIS3LOCAL)/bin/moc
RCC      = $(ISIS3LOCAL)/bin/rcc
PATCHELF = $(ISIS3LOCAL)/bin/patchelf

#---------------------------------------------------------------------------
# Set up for Qwt
#---------------------------------------------------------------------------
QWTINCDIR = -I$(ISIS3LOCAL)/include/qwt/qwt5.2.0/qwt
QWTLIBDIR = -L$(ISIS3LOCAL)/lib
QWTLIB    = -lqwt

#---------------------------------------------------------------------------
# Set up for Xerces
#---------------------------------------------------------------------------
XERCESINCDIR = -I$(ISIS3LOCAL)/include/xercesc/xercesc-3.1.1
XERCESLIBDIR = -L$(ISIS3LOCAL)/lib
XERCESLIB    = -lxerces-c

#---------------------------------------------------------------------------
# Set up for Tiff
#---------------------------------------------------------------------------
TIFFINCDIR = -I$(ISIS3LOCAL)/include/tiff/tiff-4.0.1
TIFFLIBDIR = -L$(ISIS3LOCAL)/lib
TIFFLIB    = -ltiff

#---------------------------------------------------------------------------
# Set up for naif cspice libraries. Update for N0066 Release. (KJB 2017-06-28)
#---------------------------------------------------------------------------
NAIFINCDIR = -I$(ISIS3LOCAL)/include/naif/cspice64/naif
NAIFLIBDIR = -L$(ISIS3LOCAL)/lib
NAIFLIB    = -lcspice

#---------------------------------------------------------------------------
# Set up for TNT
#---------------------------------------------------------------------------
TNTINCDIR = -I$(ISIS3LOCAL)/include/tnt/tnt126
TNTLIBDIR =
TNTLIB    =

#---------------------------------------------------------------------------
# Set up for JAMA
#---------------------------------------------------------------------------
JAMAINCDIR = -I$(ISIS3LOCAL)/include/jama/jama125
JAMALIBDIR =
JAMALIB    =

#---------------------------------------------------------------------------
# Set up for GEOS
#---------------------------------------------------------------------------
GEOSINCDIR = -I$(ISIS3LOCAL)/include/geos/geos3.2.0
GEOSLIBDIR = -L$(ISIS3LOCAL)/lib
GEOSLIB    = -lgeos-3.2.0

#---------------------------------------------------------------------------
# Set up for the GNU Scientific Library (GSL).  Note that this setup
# suppports include patterns such as <gsl/gsl_errno.h>.  With this
# format, any other include spec that points to the general include
# directory, such as GEOS, will suffice.  Therefore, an explicit
# include directive is ommitted but provided as an empty reference
# in cases where it may be located elsewhere.  This also goes for the
# library reference.
#---------------------------------------------------------------------------
GSLINCDIR =
GSLLIBDIR =
GSLLIB    = -lgsl -lgslcblas

#---------------------------------------------------------------------------
# Set up for GMM
#---------------------------------------------------------------------------
GMMINCDIR = -I$(ISIS3LOCAL)/include/gmm/gmm3.0.0
GMMLIBDIR =
GMMLIB    =

#---------------------------------------------------------------------------
# Set up for SuperLU
#---------------------------------------------------------------------------
SUPERLUINCDIR = -I$(ISIS3LOCAL)/include/superlu/superlu3.0
SUPERLULIBDIR = -L$(ISIS3LOCAL)/lib
SUPERLULIB    = -lsuperlu_3.0 -lblas -lgfortran


#---------------------------------------------------------------------------
# Set up for Google Protocol Buffers (ProtoBuf)
#---------------------------------------------------------------------------
PROTOBUFINCDIR = -I$(ISIS3LOCAL)/include/google-protobuf/protobuf2.3.0
PROTOBUFLIBDIR = -L$(ISIS3LOCAL)/lib
PROTOBUFLIB    = -lprotobuf
PROTOC         = $(ISIS3LOCAL)/bin/protoc

#---------------------------------------------------------------------------
# Set up for kakadu
# The Kakadu library is proprietary. The source files cannot be distributed
# with ISIS. If you need to rebuild ISIS on your system, then you will
# need to modify the lines below that pertain to the location of the
# header files and library on your system. The compilation flag, ENABLEJP2K,
# should be set to true if you are building with the Kakadu library and
# you want to use the JPEG2000 specific code in the ISIS system. Otherwise,
# set the ENABLEJP2K flag to false.
#---------------------------------------------------------------------------
KAKADUINCDIR = -I$(ISIS3LOCAL)/include/kakadu/v6_3-00967N
KAKADULIBDIR = -L$(ISIS3LOCAL)/lib
KAKADULIB    = -lkdu_a63R
ISISCPPFLAGS += -DENABLEJP2K=1


#---------------------------------------------------------------------------
# Set up for BOOST
#---------------------------------------------------------------------------
BOOSTINCDIR = -I$(ISIS3LOCAL)/include/boost/boost1.41.0
BOOSTLIBDIR =
BOOSTLIB    =
#BOOSTLIBDIR = -L$(ISIS3LOCAL)/lib
#BOOSTLIB    = -lboost_date_time -lboost_filesystem -lboost_graph -lboost_math_c99f \
#              -lboost_math_c99l -lboost_math_c99 -lboost_math_tr1f -lboost_math_tr1l \
#              -lboost_math_tr1 -lboost_prg_exec_monitor -lboost_program_options \
#              -lboost_regex -lboost_serialization -lboost_signals -lboost_system \
#              -lboost_thread -lboost_unit_test_framework -lboost_wave -lboost_wserialization

#---------------------------------------------------------------------------
# Set up for Cholmod libraries
#---------------------------------------------------------------------------
CHOLMODINCDIR = -I$(ISIS3LOCAL)/include/CHOLMOD/CHOLMOD1.7.3
CHOLMODLIBDIR = -L$(ISIS3LOCAL)/lib
CHOLMODLIB    = -lcholmod -lamd -lcolamd -llapack

#---------------------------------------------------------------------------
# Set up for OpenCV libraries
#---------------------------------------------------------------------------
OPENCVINCDIR =  -I$(ISIS3LOCAL)/include
##OPENCVLIBDIR =  -L$(ISIS3LOCAL)/lib   # Redundant
OPENCVLIBS   = -lopencv_calib3d -lopencv_contrib -lopencv_core -lopencv_features2d \
               -lopencv_flann -lopencv_gpu -lopencv_highgui -lopencv_imgproc \
               -lopencv_legacy -lopencv_ml -lopencv_nonfree -lopencv_objdetect \
               -lopencv_photo -lopencv_stitching -lopencv_superres -lopencv_ts \
               -lopencv_video -lopencv_videostab

#---------------------------------------------------------------------------
# Set up for Natural Neighbor library (NN)
#---------------------------------------------------------------------------
NNINCDIR = -I$(ISIS3LOCAL)/include/nn
#NNLIBDIR = -L$(ISIS3LOCAL)/lib
NNLIB = -lnn

#---------------------------------------------------------------------------
# Final generic setup for includes at the top level
#---------------------------------------------------------------------------
DEFAULTINCDIR =  -I$(ISIS3LOCAL)/include

#---------------------------------------------------------------------------
#  Define the third party distribution libraries (patterns)
#---------------------------------------------------------------------------

#  Libraries
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtXmlPatterns.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtXml.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtNetwork.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtSql.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtGui.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtCore.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtSvg.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtTest.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtDBus.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtWebKit.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libQtOpenGL.so*[^g]"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libqwt.so*"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libprotobuf.so*"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libgeos-*.so"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libgeos_c.so*"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libcspice.so*"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libcwd_r.so*"
THIRDPARTYLIBS    += "$(ISIS3SYSLIB)/libblas.so.*"
THIRDPARTYLIBS    += "$(ISIS3SYSLIB)/libgfortran.so.*"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libxerces-c*.so*"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libtiff*.so*"
THIRDPARTYLIBS    += "$(ISIS3SYSLIB)/libgsl*.so*"
#THIRDPARTYLIBS    += "$(ISIS3SYSLIB)/libicuuc.so*"
#THIRDPARTYLIBS    += "$(ISIS3SYSLIB)/libicudata.so*"
#THIRDPARTYLIBS    += "$(ISIS3SYSLIB)/libpq.so*"
#THIRDPARTYLIBS    += "$(ISIS3SYSLIB)/libmysqlclient_r.so*"
#THIRDPARTYLIBS    += "$(ISIS3SYSLIB)/libssl.so*"
#THIRDPARTYLIBS    += "$(ISIS3SYSLIB)/libcrypto.so*"
#THIRDPARTYLIBS    += "/lib/libreadline.so*"
THIRDPARTYLIBS    += "$(ISIS3LOCAL)/lib/libkdu_a63R.so*"

#  Plugins
THIRDPARTYPLUGINS += "$(ISIS3LOCAL)/plugins/"
