# Translates CaSSIS xml labels into the Mapping PvlGroup values
# for the ingested ISIS cube labels.
#
# The Dependencies keyword specifies a tag or attribute at the same level as
# the InputKey that uniquely identifies the InputKey.
#
# Consider the following translation group and xml
#
# Group = Samples
#   Auto
#   InputPosition  = (Array_2D_Image, Axis_Array)
#   Dependencies   = "tag@axis_name|Sample"
#   InputKey       = elements
#   OutputName     = Samples
#   OutputPosition = (Group, Dimensions)
#   Translation    = (*, *)
# End_Group
#
# <Array_2D_Image>
#   <Axis_Array>
#     <axis_name>Line</axis_name>
#     <sequence_number>1</sequence_number>
#     <elements>2048</elements>
#   </Axis_Array>
#   <Axis_Array>
#     <axis_name>Sample</axis_name>
#     <sequence_number>2</sequence_number>
#     <elements>279</elements>
#   </Axis_Array>
# </Array_2D_Image>
#
#
# history 2018-08-09 Jeannie Backer - Changed group name from MapProjection
#                        to ProjectionName.

Group = ProjectionName
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Planar, cart:Map_Projection)
  InputKey             = cart:map_projection_name
  OutputName           = ProjectionName
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = CenterLongitude
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Planar, cart:Map_Projection, cart:Equirectangular)
  InputKey             = cart:longitude_of_central_meridian
  OutputName           = CenterLongitude
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = CenterLatitude
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Planar, cart:Map_Projection, cart:Equirectangular)
  InputKey             = cart:latitude_of_projection_origin
  OutputName           = CenterLatitude
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

# input has different scales for x and y, but ISIS doesn't distinguish, so use x
Group = Scale
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Planar, cart:Planar_Coordinate_Information, cart:Coordinate_Representation)
  InputKey             = cart:pixel_scale_x
  OutputName           = Scale
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

# input has different pixel resolutions for x and y, but ISIS doesn't distinguish, so use x
Group = PixelResolution
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Planar, cart:Planar_Coordinate_Information, cart:Coordinate_Representation)
  InputKey             = cart:pixel_resolution_x
  OutputName           = PixelResolution
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = MaximumLatitude
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Domain, cart:Bounding_Coordinates)
  InputKey             = cart:north_bounding_coordinate
  OutputName           = MaximumLatitude
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = MinimumLatitude
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Domain, cart:Bounding_Coordinates)
  InputKey             = cart:south_bounding_coordinate
  OutputName           = MinimumLatitude
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = MaximumLongitude
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Domain, cart:Bounding_Coordinates)
  InputKey             = cart:west_bounding_coordinate
  OutputName           = MaximumLongitude
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = MinimumLongitude
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Domain, cart:Bounding_Coordinates)
  InputKey             = cart:east_bounding_coordinate
  OutputName           = MinimumLongitude
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = UpperLeftCornerX
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Planar, cart:Geo_Transformation)
  InputKey             = cart:upperleft_corner_x
  OutputName           = UpperLeftCornerX
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = UpperLeftCornerY
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Planar, cart:Geo_Transformation)
  InputKey             = cart:upperleft_corner_y
  OutputName           = UpperLeftCornerY
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = EquatorialRadius
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Geodetic_Model)
  InputKey             = cart:semi_major_radius
  OutputName           = EquatorialRadius
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = PolarRadius
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Geodetic_Model)
  InputKey             = cart:polar_radius
  OutputName           = PolarRadius
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

Group = LatitudeType
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Geodetic_Model)
  InputKey             = cart:latitude_type
  OutputName           = LatitudeType
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (Planetocentric, planetocentric)
  Translation          = (*, *)
End_Group

Group = LongitudeDirection
  Auto
  InputPosition        = (Observation_Area, Discipline_Area, cart:Cartography, cart:Spatial_Reference_Information, cart:Horizontal_Coordinate_System_Definition, cart:Geodetic_Model)
  InputKey             = cart:longitude_direction
  OutputName           = LongitudeDirection
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (PositiveEast, "Positive East")
  Translation          = (PositiveWest, "Positive West")
End_Group

Group = TargetName
  Auto
  InputPosition        = (Observation_Area, Target_Identification)
  InputKey             = name
  OutputName           = TargetName
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

# Does not exist in xml label
Group = LongitudeDomain
  Auto
  InputDefault         = 360
  InputPosition        = (Nothing, Nothing)
  InputKey             = Nothing
  OutputName           = LongitudeDomain
  OutputPosition       = (Object,IsisCube,Group,Mapping)
  Translation          = (*, *)
End_Group

End
