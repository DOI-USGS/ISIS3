<?xml version="1.0" encoding="UTF-8"?>

<application name="camdev" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://isis.astrogeology.usgs.gov/Schemas/Application/application.xsd">

  <brief>
    Creates photometric and geometric information bands for an image cube
  </brief>

  <description>
  <p>
    <strong>
      This application is for camera development and is not supported for general public use.
      See <i>phocube</i> for a public use application that performs similar processes.
    </strong>

    This program, camdev, creates backplane bands that contain photometric, geometric, and
    spacecraft instrument information for an image file.  The parameter options
    range from photometric angles (incidence, emission, and phase) to various
    <def line="Azimuth">azimuth</def> angles, and options based on spatial
    (latitude, longitude, and resolution) information. This program will
    not work on <def>Level1</def> images without a camera model, or on mosaics.
    The input image pixels are not propagated to the output file unless the
    user selects the "DN" option. The following is a partial list of how users have made use of
    band output:
    <ul>
      <li>Evaluate the individual bands in order to establish subsequent
          image processing steps</li>
      <li>Specify as input to other ISIS programs such as fx and photomet</li>
      <li>Demonstrate the result of each selected option</li>
      <li>Determine how the images are mosaicked together after the
          Level2 images are created from the Level1 images with backplanes </li>
    </ul>
  </p>
  <p>
    All ISIS applications default to the following geometric reference if a camera model exists:
    <ul>
      <li>Longitude Domain = 360, longitude range reported from 0 to 360</li>
      <li>Latitude System = Ocentric</li>
      <li>Longitude Direction = East, longitude increases to the east</li>
    </ul>
  </p>
  <p>
    There are instances where the local emission angle and the local incidence angle will have
    values over 90 degrees.  ISIS allows the computation of emission and incidence angles greater
    than 90 degrees.   This feature allows representation of viewing and illumination conditions
    where there is actual target body surface data beyond the limb or deep terminator boundary
    areas.  Applications such as photomet that applies photometric functions honor the 90 degree
    boundary.    Applications such as photrim can be applied to the camdev output to replace the
    angle values above 90 degrees to NULL.  There are certain processes that need these data,
    therefore it is allowed.
  </p>
  <p>
    This program requires a <def>Level1</def> file that has a successful
    "<i>spiceinit</i>" applied to it, or a <def>Level2</def> image
    cube file.  For every valid input pixel, an output pixel is computed
    based on either the <def>SPICE</def> information, or the
    <def link="Map Projection">map projected</def> spatial information,
    or a pre-defined equation.
  </p>
  <p>
    The parameters "morphology" and "albedo" are specifically designed to be used
    by the ISIS mosaic programs.  A mosaic program will automatically compare
    two pixel values to determine how each pixel is mosaicked into an output
    file, which depends on whether a morphology-based or an albedo-based
    product is desired.  The program computes a
    <def link="Digital Number">DN</def> value for every input pixel based on
    the formulas listed below and outputs the value to a backplane band.
    These backplane bands are used by the ISIS mosaic programs.  The following are
    equations for "morphology" and "albedo" options:
  <blockquote>
  <dl>
    <dt>  Morphology </dt>
    <dd>Equation = <def>PixelResolution</def>/cos(<def>EmissionAngle</def>)</dd>
    <dt>  Albedo </dt>
    <dd>Equation = PixelResolution * [(1/cos(<def>EmissionAngle</def>)) +
    (1/cos(<def>IncidenceAngle</def>))]</dd>
  </dl>
  </blockquote>
  </p>
  <p>
    All the options in <i>camdev</i> are applicable if the input file is a Level1
    image and has a camera model associated with the file.  If the input file
    is a map-projected Level2 image, only a few options are appropriate
    and available for selection. <br /><br />

    The following options are available for Level1 images that contain a camera model:
     <ul>
     <li>DN</li>
     <li>RADEC</li>
     <li>PLANETOCENTRICLATITUDE</li>
     <li>PLANETOGRAPHICLATITUDE</li>
     <li>POSITIVEEAST360LONGITUDE</li>
     <li>POSITIVEEAST180LONGITUDE</li>
     <li>POSITIVEWEST360LONGITUDE</li>
     <li>POSITIVEWEST180LONGITUDE</li>
     <li>BODYFIXED</li>
     <li>LOCALRADIUS</li>
     <li>PIXELRESOLUTION</li>
     <li>LINERESOLUTION</li>
     <li>SAMPLERESOLUTION</li>
     <li>DETECTORRESOLUTION</li>
     <li>SPACECRAFTPOSITION</li>
     <li>SPACECRAFTAZIMUTH</li>
     <li>SLANTDISTANCE</li>
     <li>TARGETCENTERDISTANCE</li>
     <li>SUBSPACECRAFTLATITUDE</li>
     <li>SUBSPACECRAFTLONGITUDE</li>
     <li>SUBSPACECRAFTGROUNDAZIMUTH</li>
     <li>SPACECRAFTALTITUDE</li>
     <li>OFFNADIRANGLE</li>
     <li>SUNPOSITION</li>
     <li>SUNAZIMUTH</li>
     <li>SOLARDISTANCE</li>
     <li>SUBSOLARLATITUDE</li>
     <li>SUBSOLARLONGITUDE</li>
     <li>SUBSOLARGROUNDAZIMUTH</li>
     <li>PHASE</li>
     <li>EMISSION</li>
     <li>INCIDENCE</li>
     <li>LOCALEMISSION</li>
     <li>LOCALINCIDENCE</li>
     <li>NORTHAZIMUTH</li>
     <li>DISTORTEDFOCALPLANE</li>
     <li>UNDISTORTEDFOCALPLANE</li>
     <li>EPHEMERISTIME</li>
     <li>UTC</li>
     <li>LOCALSOLARTIME</li>
     <li>SOLARLONGITUDE</li>
     <li>MORPHOLOGYRANK</li>
     <li>ALBEDORANK</li>
     </ul>
    The following options are available for Level2 images:
     <ul>
     <li>DN</li>
     <li>RADEC</li>
     <li>PLANETOCENTRICLATITUDE</li>
     <li>POSITIVEEAST360LONGITUDE</li>
     <li>PIXELRESOLUTION</li>
     <li>DISTORTEDFOCALPLANE</li>
     <li>UNDISTORTEDFOCALPLANE</li>
     <li>EPHEMERISTIME</li>
     <li>UTC</li>
     <li>SPACECRAFTPOSITION</li>
     </ul>
  </p>
  <p>
    The BandBin group keywords are updated in the labels of the output cube
    file. The keyword "Name" within the BandBin group,
    shown below, is populated with the name of each option selected by the
    user as bands.  These bands can be referenced by their names in
    applications such as
    "<i>mapmos</i>"
    and
    "<i>qview</i>."
    <blockquote>
    <pre>
    <b>Example:</b>

    camdev from=EW0131773041G_cal.cub to=EW0131773041G_cal.pho.cub morph=true dn=true

    <b>Sample of image label:</b>

    Group = Dimensions
      Samples = 1024
      Lines   = 1024
      <b>Bands   = 7 </b>
    End_Group
    <b>
    Group = BandBin
      Name   = ("750 BW 5", "Phase Angle", "Emission Angle", "Incidence Angle",
        	Latitude, Longitude, Morphology)
      Number = (7, 7, 7, 7, 7, 7, 7)
      Center = (748.7, 748.7, 748.7, 748.7, 748.7, 748.7, 748.7)
      Width  = (5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1)
    End_Group
    </b>

    Note:  The first band retained the BandBin Name value from the input file.
    The program has "Phase Angle," "Emission Angle," "Incidence Angle,"
    "Latitude," and "Longitude" options pre-selected.
    </pre>
   </blockquote>
  </p>
  <p>
    If the backplane bands generated by camdev are used in the mosaic
    programs and the mosaic requires the input image pixel, the "DN"
    parameter name must be set to "true" in camdev.  When backplane
    bands are used in the
    "<i>fx</i>"
    or
    "<i>photomet</i>"
    program, it is not necessary to propagate the input image to the output
    file.
  </p>
  </description>

  <oldName>
    <item>lev1geoplane</item>
    <item>levgeoplane</item>
    <item>geoback</item>
  </oldName>

  <seeAlso>
    <applications>
      <item>spiceinit</item>
      <item>mapmos</item>
      <item>qview</item>
      <item>fx</item>
      <item>photomet</item>
      <item>automos</item>
      <item>phocube</item>
    </applications>
  </seeAlso>

  <liens>
    <item>Add resolution to possible outputs</item>
    <item>Convert to a IsisProcessBySpectra when it gets written</item>
  </liens>

  <history>
    <change name="Makayla Shepherd" date="2015-09-22">
      Original version.
    </change>
    <change name="Kaj Williams" date="2017-06-09">
      Renamed albedo to albedoRank, renamed morph (or morphology) to morphRank (or morphologyRank). Ref #4008.
    </change>
  </history>

  <category>
    <categoryItem>Radiometric and Photometric Correction</categoryItem>
    <categoryItem>Cameras</categoryItem>
  </category>

  <groups>
    <group name="Files">
      <parameter name="FROM">
        <type>cube</type>
        <fileMode>input</fileMode>
        <brief>
          Input cube file
        </brief>
        <description>
          This is the input filename.  The input image cube can be a <def>Level1</def>
          or <def>Level2</def> file.  For a Level1 image, spiceinit
          must be successfully applied before running camdev.
        </description>
        <filter>
          *.cub
        </filter>
      </parameter>

      <parameter name="TO">
        <type>cube</type>
        <pixelType>real</pixelType>
        <fileMode>output</fileMode>
        <brief>
          Output cube file
        </brief>
        <description>
          This is the output file name.  The cube file will contain a band for
          each of the selected options.  The BandBin Group in the image labels
          of the output cube file will be updated with the "Name" keyword
          containing the output band names (options) in the order that they are
          stacked within the cube.
        </description>
      </parameter>

      <parameter name="SOURCE">
        <type>string</type>
        <brief>Specifies the source of the geometric information</brief>
        <default><item>CAMERA</item></default>
        <description>
          Specifies whether the geometric information will be obtained from the
          camera model or from the map projection.  If this parameter is set to CAMERA,
          all band options are available for the user to select. If this
          parameter is set to PROJECTION, then only DN, LATITUDE, LONGITUDE, and
          PIXELRESOLUTION band options are available and all other options
          will be greyed out. If the user sets this parameter to CAMERA and
          the input file does not contain a camera model or SPICE information,
          then an error message will occur.
        </description>
        <list>
          <option value="CAMERA">
            <brief>Get the geometric information from camera model</brief>
            <description>
              The geometric information is obtained from a camera model and
              all band options are available for selection.
            </description>
          </option>
          <option value="PROJECTION">
            <brief>Get the geometric information based on map projection information</brief>
            <description>
              The geometric information is obtained based on the label
              keyword values stored under the "Mapping" group in the image
              labels.  Only DN, LATITUDE, LONGITUDE, and PIXELRESOLUTION
              band options are available.
            </description>
            <exclusions>
              <item>PLANETOGRAPHICLATITUDE</item>
              <item>POSITIVEEAST180LONGITUDE</item>
              <item>POSITIVEWEST360LONGITUDE</item>
              <item>POSITIVEWEST180LONGITUDE</item>
              <item>BODYFIXED</item>
              <item>LOCALRADIUS</item>
              <item>LINERESOLUTION</item>
              <item>SAMPLERESOLUTION</item>
              <item>DETECTORRESOLUTION</item>
              <item>SPACECRAFTAZIMUTH</item>
              <item>SLANTDISTANCE</item>
              <item>TARGETCENTERDISTANCE</item>
              <item>SUBSPACECRAFTLATITUDE</item>
              <item>SUBSPACECRAFTLONGITUDE</item>
              <item>SUBSPACECRAFTGROUNDAZIMUTH</item>
              <item>SPACECRAFTALTITUDE</item>
              <item>OFFNADIRANGLE</item>
              <item>SUNPOSITION</item>
              <item>SUNAZIMUTH</item>
              <item>SOLARDISTANCE</item>
              <item>SUBSOLARLATITUDE</item>
              <item>SUBSOLARLONGITUDE</item>
              <item>SUBSOLARGROUNDAZIMUTH</item>
              <item>PHASE</item>
              <item>EMISSION</item>
              <item>INCIDENCE</item>
              <item>LOCALEMISSION</item>
              <item>LOCALINCIDENCE</item>
              <item>NORTHAZIMUTH</item>
              <item>LOCALSOLARTIME</item>
              <item>SOLARLONGITUDE</item>
              <item>MORPHOLOGYRANK</item>
              <item>ALBEDORANK</item>
            </exclusions>
          </option>
        </list>
      </parameter>
    </group>

    <group name="Photometry">
      <parameter name="DN">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Propagate the input pixel to the output file</brief>
        <description>
          This parameter specifies whether the input image pixel value
          (<def link="Digital Number">DN</def>) will be propagated to
          the output file.  The DN parameter must be set to "true,"
          if the output product created is expected to contain the input
          image information.
        </description>
      </parameter>
      <parameter name="RADEC">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create bands for Right Ascention and Declination</brief>
        <description>
          If this parameter is true, the <def>Right Ascension</def>, and the
          <def>Declination</def> will be calculated for every pixel and each will be placed into
          their respective bands in the output cube. The output cube labels will contain
          "Right Ascension" and "Declination" in the BandBin group, in the band sequence of the
          output file. Right Ascension and Declination are in degrees.
        </description>
      </parameter>
      <parameter name="PLANETOCENTRICLATITUDE">
        <type>boolean</type>
        <default><item>TRUE</item></default>
        <brief>Create a Planetocentic Latitude band</brief>
        <description>
	  If this parameter is true, the <def>Planetocentric Latitude</def> value will be computed for
          every pixel and placed in a band in the output cube.  The output cube
          labels will contain "Planetocentric Latitude" in the BandBin group, in band sequence
          of the output file. Planetocentric Latitude is in degrees.
        </description>
      </parameter>
      <parameter name="PLANETOGRAPHICLATITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Planetographic Latitude band</brief>
        <description>
	  If this parameter is true, the <def>Planetographic Latitude</def> value will be computed for
          every pixel and placed in a band in the output cube.  The output cube
          labels will contain "Planetographic Latitude" in the BandBin group, in band sequence
          of the output file. Planetographic Latitude is in degrees.
        </description>
      </parameter>
      <parameter name="POSITIVEEAST360LONGITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Positive East 360 Longitude band</brief>
        <description>
	  If this parameter is true, the <def>Positive East 360 Longitude</def> value will be computed for
          every pixel placed in a band in the output cube.  The output cube
          labels will contain "Positive East 360 Longitude" in the BandBin group, in band
          sequence of the output file. Positive East 360 Longitude is in degrees.
        </description>
      </parameter>
      <parameter name="POSITIVEEAST180LONGITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Positive East 180 Longitude band</brief>
        <description>
          If this parameter is true, the <def>Positive East 180 Longitude</def> value will be computed for
          every pixel placed in a band in the output cube.  The output cube
          labels will contain "Positive East 180 Longitude" in the BandBin group, in band
          sequence of the output file. Positive East 180 Longitude is in degrees.
        </description>
      </parameter>
      <parameter name="POSITIVEWEST360LONGITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Positive West 360 Longitude band</brief>
        <description>
          If this parameter is true, the <def>Positive West 360 Longitude</def> value will be computed for
          every pixel placed in a band in the output cube.  The output cube
          labels will contain "Positive West 360 Longitude" in the BandBin group, in band
          sequence of the output file. Positive West 360 Longitude is in degrees.
        </description>
      </parameter>
      <parameter name="POSITIVEWEST180LONGITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Positive West 180 Longitude band</brief>
        <description>
          !If this parameter is true, the <def>Positive West 180 Longitude</def> value will be computed for
          every pixel placed in a band in the output cube.  The output cube
          labels will contain "Positive West 180 Longitude" in the BandBin group, in band
          sequence of the output file. Positive West 180 Longitude is in degrees.
        </description>
      </parameter>
      <parameter name="BODYFIXED">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create bands for the X, Y, and Z Body Fixed Coordinates</brief>
        <description>
          If this parameter is true, the <def>Body Fixed Coordinates</def> will be calculated for
          every pixel and the values for X, Y, and Z will each be placed into their own bands in
          the output cube. The output cube labels will contain "Body Fixed X", "Body Fixed Y",
          and "Body Fixed Z" in the BandBin group, in the band sequence of the output file.
          Body Fixed Coordinates are in kilometers.
        </description>
      </parameter>
      <parameter name="LOCALRADIUS">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Local Radius band</brief>
        <description>
          If this parameter is true, the <def>Local Radius</def> will be calculated for
          every pixel and the values for X, Y, and Z will each be placed in a band in
          the output cube. The output cube labels will contain "Local Radius" in the BandBin group,
          in the band sequence of the output file. Local Radius is in meters.
        </description>
      </parameter>
      <parameter name="PIXELRESOLUTION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Pixel Resolution band</brief>
        <description>
          If this parameter is true, the <def>Pixel Resolution</def>
          will be computed for every pixel and placed in a band in the output
          cube.  The output cube labels will contain "Pixel Resolution" in the
          BandBin group, in band sequence of the output file. PixelResolution
          is in meters.
        </description>
      </parameter>
      <parameter name="LINERESOLUTION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Line Resolution band</brief>
        <description>
          If this parameter is true, the <def>Line Resolution</def> will be
          computed for every pixel and placed in a band in the output cube.
          The output cube labels will contain "Line Resolution" in the BandBin
          group, in band sequence of the output file. LineResolution is in meters.
        </description>
      </parameter>
      <parameter name="SAMPLERESOLUTION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Sample Resolution band</brief>
        <description>
          If this parameter is true, the <def>Sample Resolution</def> will be
          computed for every pixel and placed in a band in the output cube.
          The output cube labels will contain "Sample Resolution" in the
          BandBin group, in band sequence of the output file. SampleResolution
          is in meters.
       </description>
      </parameter>
      <parameter name="DETECTORRESOLUTION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Detector Resolution band</brief>
        <description>
          If this parameter is true, the <def>Detector Resolution</def> will be
          computed for every pixel and placed in a band in the output cube.  The
          output cube labels will contain "Detector Resolution" in the BandBin
          group, in band sequence of the output file. DetectorResolution is
          in millimeters.
        </description>
      </parameter>
      <parameter name="SPACECRAFTPOSITION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create bands for the X, Y, and Z Spacecraft Position</brief>
        <description>
          If this parameter is true, the <def>Spacecraft Position</def> will be calculated for
          every pixel and the values for X, Y, and Z will each be placed into their own bands in
          the output cube. The output cube labels will contain "Spacecraft Position X",
          "Spacecraft Position Y", and "Spacecraft Position Z" in the BandBin group, in the band
          sequence of the output file. Spacecraft Position is in body-fixed frame kilometer units.
        </description>
      </parameter>
      <parameter name="SPACECRAFTAZIMUTH">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Spacecraft Azimuth band</brief>
        <description>
          If this parameter is true, the <def>Spacecraft Azimuth</def>  will
          be computed for every pixel and placed in a band in the output cube.
          The output cube labels will contain "Spacecraft Azimuth" in the
          BandBin group, in band sequence of the output file. SpacecraftAzimuth
          is in degrees.
        </description>
      </parameter>
      <parameter name="SLANTDISTANCE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Slant Distance band</brief>
        <description>
          If this parameter is true, the <def>Slant Distance</def> will be calculated for
          every pixel and place in a band in the output cube. The output cube labels will contain
          "Slant Distance", in the BandBin group, in the band sequence of the output file.
          Slant Distance is reported in kilometers.
        </description>
      </parameter>
      <parameter name="TARGETCENTERDISTANCE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Target Center Distance band</brief>
        <description>
          If this parameter is true, the <def>Target Center Distance</def> will be
          computed for every pixel and placed in a band in the output cube.
          The output cube labels will contain "Target Center Distance" in the BandBin
          group, in band sequence of the output file. Target Center Distance is
          in kilometers.
        </description>
      </parameter>
      <parameter name="SUBSPACECRAFTLATITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a SubSpacecraft Latitude band</brief>
        <description>
          If this parameter is true, the <def>SubSpacecraft Latitude</def> will be
          computed for every pixel and placed in a band in the output cube.
          The output cube labels will contain "SubSpacecraft Laitiude" in the BandBin
          group, in band sequence of the output file. SubSpacecraft Latitude is in degrees.
        </description>
      </parameter>
      <parameter name="SUBSPACECRAFTLONGITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a SubSpacecraft Longitude band</brief>
        <description>
          If this parameter is true, the <def>SubSpacecraft Longitude</def> will be
          computed for every pixel and placed in a band in the output cube.
          The output cube labels will contain "SubSpacecraft Longitude" in the BandBin
          group, in band sequence of the output file. SubSpacecraft Longitude is
          in degrees.
        </description>
      </parameter>
      <parameter name="SPACECRAFTALTITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Spacecraft Altitude band</brief>
        <description>
          If this parameter is true, the <def>Spacecraft Altitude</def> will be
          computed for every pixel and placed in a band in the output cube.
          The output cube labels will contain "Spacecraft Altitude" in the BandBin
          group, in band sequence of the output file. Spacecraft Altitude is
          in kilometers.
        </description>
      </parameter>
      <parameter name="OFFNADIRANGLE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create an Off Nadir Angle band</brief>
        <description>
          If this parameter is true, the <def>Off Nadir Angle</def> will be
          computed for every pixel and placed in a band in the output cube.
          The output cube labels will contain "Off Nadir Angle" in the BandBin
          group, in band sequence of the output file. Off Nadir Angle is
          in degrees.
        </description>
      </parameter>
      <parameter name="SUBSPACECRAFTGROUNDAZIMUTH">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a SubSpacecraft Ground Azimuth band</brief>
        <description>
          If this parameter is true, the <def>SubSpacecraft Ground Azimuth</def>
          will be computed for every pixel and placed in a band in the output
          cube. The output cube labels  will contain "SubSpacecraft Ground
          Azimuth" in the BandBin group, in band sequence of the output file.
          SubSpacecraftGround Azimuth is in degrees.
        </description>
      </parameter>
      <parameter name="SUNPOSITION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create bands for the X, Y, and Z of the Sun Position</brief>
        <description>
          If this parameter is true, the <def>Sun Position</def> will be calculated for
          every pixel and the values for X, Y, and Z will each be placed into their own bands in
          the output cube. The output cube labels will contain "Sun Position X",
          "Sun Position Y", and "Sun Position Z" in the BandBin group, in the band
          sequence of the output file. Sun Position is in kilometers.
        </description>
      </parameter>
      <parameter name="SUNAZIMUTH">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Sun Azimuth band</brief>
        <description>
          If this parameter is true, the <def>Sun Azimuth</def> will be computed
          for every pixel and placed in a band in the output cube.  The output
          cube labels will contain "Sun Azimuth" in the BandBin group, in band
          sequence of the output file. SunAzimuth is in degrees.
        </description>
      </parameter>
      <parameter name="SOLARDISTANCE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Solar Distance band</brief>
        <description>
          If this parameter is true, the <def>Solar Distance</def> will be computed
          for every pixel and placed in a band in the output cube.  The output
          cube labels will contain "Solar Distance" in the BandBin group, in band
          sequence of the output file. Solar Distance is in astronomical units.
        </description>
      </parameter>
      <parameter name="SUBSOLARLATITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a SubSolar Latitude band</brief>
        <description>
          If this parameter is true, the <def>SubSolar Latitude</def> will be computed
          for every pixel and placed in a band in the output cube.  The output
          cube labels will contain "SubSolar Latitude" in the BandBin group, in band
          sequence of the output file. SubSolar Latitude is in degrees.
        </description>
      </parameter>
      <parameter name="SUBSOLARLONGITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a SubSolar Longitude band</brief>
        <description>
          If this parameter is true, the <def>SubSolar Longitude</def> will be computed
          for every pixel and placed in a band in the output cube.  The output
          cube labels will contain "SubSolar Longitude" in the BandBin group, in band
          sequence of the output file. SubSolar Longitude is in degrees.
        </description>
      </parameter>
      <parameter name="SUBSOLARGROUNDAZIMUTH">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a SubSolar Ground Azimuth band</brief>
        <description>
          If this parameter is true, the <def>SubSolar Ground Azimuth</def>
          will be computed for every pixel and placed in a band in the output
          cube.  The output cube labels will contain "Sub Solar Ground Azimuth"
          in the BandBin group, in band sequence of the output file.
          SubSolarGroundAzimuth is in degrees.
        </description>
      </parameter>
      <parameter name="PHASE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Phase Angle band</brief>
        <description>
          If this parameter is true, the <def>Phase Angle</def> will be
          computed for every pixel and placed in a band in the output cube.
          The output cube labels will contain "Phase Angle" in the BandBin
          group, in band sequence of the output file. Phase angles are in degrees.
        </description>
      </parameter>
      <parameter name="EMISSION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create an Emission Angle band</brief>
        <description>
          If this parameter is true, the <def>Emission Angle</def> will be
          computed  for every pixel and placed in a band in the output cube.
          The output cube labels will contain "Emission Angle" in the BandBin
          group, in band sequence of the output file. Emission angles are in degrees. There are
          certain cases where the emission angle is over 90 degrees. This is allowed as there
          are processes that need these data. See main description for details.
        </description>
      </parameter>
      <parameter name="INCIDENCE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create an Incidence Angle band</brief>
        <description>
          If this parameter is true, the <def>Incidence Angle</def> will be
          computed for every pixel and placed in a band in the output cube.
          The output cube labels will contain "Incidence Angle" in the BandBin
          group, in band sequence of the output file. Incidence angles are in degrees. There are
          certain cases where the incidence angle is over 90 degrees. This is allowed as there
          are processes that need these data. See main description for details.
        </description>
      </parameter>
      <parameter name="LOCALEMISSION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Local Emission Angle band</brief>
        <description>
          If this parameter is true, the <def link="local emission angle"
          >Local Emission Angle</def>  will be computed for every pixel
          and placed in a band in the output cube.  The output cube labels
          will contain "Local Emission Angle" in the BandBin group, in band
          sequence of the output file. LocalEmissionAngle is in degrees. There are certain
          cases where the local emission angle is over 90 degrees. This is allowed as there
          are processes that need these data. See main description for details.
        </description>
      </parameter>
      <parameter name="LOCALINCIDENCE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Local Incidence Angle band</brief>
        <description>
          If this parameter is true, the <def link="Local Incidence Angle">Local
          Incidence Angle</def> will be computed for every pixel and placed in
          a band in the output cube.  The output cube labels will contain
          "Local Incidence Angle" in the BandBin group, in band sequence
          of the output file. LocalIncidenceAngle is in degrees. There are certain
          cases where the local incidence angle is over 90 degrees. This is allowed as there
          are processes that need these data. See main description for details.
         </description>
      </parameter>
      <parameter name="NORTHAZIMUTH">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a North Azimuth band</brief>
        <description>
          If this parameter is true, the <def>North Azimuth</def> will be
          computed for every pixel and placed in a band in the output cube.  The
          output cube labels will contain "North  Azimuth" in the BandBin group,
          in band sequence of the output file. NorthAzimuth is in degrees.
        </description>
      </parameter>
      <parameter name="DISTORTEDFOCALPLANE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create bands for the X, and Y of the Distorted Focal Plane</brief>
        <description>
          If this parameter is true, the <def>Distorted Focal Plane</def> will be calculated for
          every pixel and the values for X, and Y will each be placed into their own bands in
          the output cube. The output cube labels will contain "Distorted Focal Plane X",
          and "Distorted Focal Plane Y" in the BandBin group, in the
          band sequence of the output file. Distorted Focal Plane is in millimeters.
        </description>
      </parameter>
      <parameter name="UNDISTORTEDFOCALPLANE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create bands for the X, Y, and Z of the Undistorted Focal Plane</brief>
        <description>
          If this parameter is true, the <def>Undistorted Focal Plane</def> will be calculated for
          every pixel and the values for X, Y, and Z will each be placed into their own bands in
          the output cube. The output cube labels will contain "Undistorted Focal Plane X",
          "Undistorted Focal Plane Y", and "Undistorted Focal Plane Z" in the BandBin group, in the
          band sequence of the output file. Undistorted Focal Plane is in millimeters.
        </description>
      </parameter>
      <parameter name="EPHEMERISTIME">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create an Ephemeris Time band</brief>
        <description>
          If this parameter is true, the <def>Ephemeris Time</def> will be
          computed for every pixel and placed in a band in the output cube.  The
          output cube labels will contain "Ephemeris Time" in the BandBin group,
          in band sequence of the output file. Ephemeris is in seconds.
        </description>
      </parameter>
      <parameter name="UTC">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create an UTC band</brief>
        <description>
          If this parameter is true, the <def>UTC</def> will be
          computed for every pixel and placed in a band in the output cube.  The
          output cube labels will contain "UTC" in the BandBin group,
          in band sequence of the output file. UTC format consists of year, month, day, hour,
          minutes, and seconds, and is output in string format.
        </description>
      </parameter>
      <parameter name="LOCALSOLARTIME">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Local Solar Time band</brief>
        <description>
          If this parameter is true, the <def>Local Solar Time</def> will be
          computed for every pixel and placed in a band in the output cube.  The
          output cube labels will contain "Local Solar Time" in the BandBin group,
          in band sequence of the output file. Local Solar Time is in degrees.
        </description>
      </parameter>
      <parameter name="SOLARLONGITUDE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a Solar Longitude band</brief>
        <description>
          If this parameter is true, the <def>Solar Longitude</def> will be
          computed for every pixel and placed in a band in the output cube.  The
          output cube labels will contain "Solar Longitude" in the BandBin group,
          in band sequence of the output file. Solar Longitude is in degrees.
        </description>
      </parameter>
      <parameter name="MORPHOLOGYRANK">
         <type>boolean</type>
         <default><item>FALSE</item></default>
         <brief>Create a Morphology rank band, used for ranking images based on favorable local emission angles.</brief>
         <description>
           <p>
             This band is computed from the <def link="Pixel Resolution">pixel resolution</def>
             and <def link="Emission Angle">emission angle</def> using the following formula:<br />
             <br />MorphologyRank = PixelResolution / cos(EmissionAngle)<br /> <br />
             The resulting output band can be used by <i>automos</i> to create a
             morphologyRank-based mosaic product.  This option uses the
             <def link="Local Emission Angle">local emission angle</def> if the input file
             is initialized (spiceinit) with an elevation model (DEM); otherwise, it
             uses the default calculation (from the ellipsoid).  All computed cosines are
             tested for zero.  If the result is zero, then the value is set to a constant
             value very close to zero.
           </p>
           <p>
             <dl>
             <dt>
               Append the following parameters to the <i>automos</i> command line to utilize this backplane band:
             </dt>
             <dd>
               <b>priority=band type=keyword keyname=Name keyvalue=morphologyRank criteria=lesser</b>.
             </dd>
             </dl>
             See <i>automos</i> documentation for further details.
           </p>
         </description>
      </parameter>
      <parameter name="ALBEDORANK">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create an Albedo rank band, used for ranking images based on favorable emission and incidence angles.</brief>
        <description>
          <p>
            This band is computed from the <def link="Pixel Resolution">pixel resolution</def>,
            <def link="Incidence Angle">incidence angle</def> and <def link="Emission Angle">emission angle</def>
            using the following formula:<br /><br />
            AlbedoRank = PixelResolution * [(1 / cos(EmissionAngle)) + (1 / cos(IncidenceAngle))]<br /><br />
            The resulting output band can be used by <i>automos</i> to create an albedoRank-based
            mosaic product.  This option always uses the
            <def link="Local Emission Angle">local emission angle</def>  and
            <def link="Local Incidence Angle">local incidence angle</def> if the input file
            is initialized (spiceinit) with an elevation model (DEM); otherwise, it
            uses the default calculation (from the ellipsoid).  All computed cosines are
            tested for zero.  If the result is zero, then the value is set to a constant
            value very close to zero.
          </p>
          <p>
            <dl>
            <dt>
              Append the following parameters to the <i>automos</i> command line to utilize this backplane band:
            </dt>
            <dd>
            <b>priority=band type=keyword keyname=Name keyvalue=albedoRank
              criteria=lesser</b>.
            </dd>
            </dl>
            See <i>automos</i> documentation for further details.
          </p>
        </description>
      </parameter>
     </group>
   </groups>

</application>
