PvlFlatMap1 Source (PvlObject):
Object = Beasts
  CAT     = Meow
  Cat     = Null
  cat     = Purr
  Eagle   = Swoop
  Rattler = coil

  Object = ExcludeObject
    Dog = Moo
  End_Object

  Group = Fish
    Trout = Brown
    Bass  = "Large mouth"
  End_Group

  Group = Birds
    Sparrow = House
    Crow    = Null
    EAGLE   = Claws
  End_Group

  Group = ExcludeGroup
    CAT = Woof
  End_Group
End_Object

Map1 - CAT and EAGLE values are overwritten. No Constraints:
	Bass = "Large mouth"
	CAT = Woof
	Crow = Null
	Dog = Moo
	EAGLE = Claws
	Rattler = coil
	Sparrow = House
	Trout = Brown

Map1B Constraints:
    excludes:  ("ExcludeGroup", "ExcludeObject")
    includes:  ()
    key list:  ()

Map1B - ExcludeGroup and ExcludeObject are excluded:
	Bass = "Large mouth"
	cat = Purr
	Crow = Null
	EAGLE = Claws
	Rattler = coil
	Sparrow = House
	Trout = Brown

    Map1C Constraints:
    size of excludes:  2
    size of includes:  1
    excludes:  ("ExcludeGroup", "ExcludeObject")
    includes:  ("Beasts")
    key list:  ()
    cat is excluded?  false
    ExcludeGroup is excluded?  true
    cat is included?  false
    Beasts is included?  true

Map1C - ExcludeGroup and ExcludeObject are excluded.
        Beasts object is included:
	Bass = "Large mouth"
	cat = Purr
	Crow = Null
	EAGLE = Claws
	Rattler = coil
	Sparrow = House
	Trout = Brown

Map1D Constraints:
    excludes:  ()
    includes:  ("Fish", "Birds")
    key list:  ()

Map1D - Fish group and Birds object are included.
        However, parent object Beasts is not included,
        so all subgroups/subobjects are skipped:
	 <Empty Map>

Map1E Constraints:
    size of key list:  7
    excludes:  ()
    includes:  ()
    key list:  ("cat", "eagle", "rattler", "trout", "bass", "sparrow", "crow")
    cat is in list?   true
    dog is in list?   false

Map1E - key list provided:
	Bass = "Large mouth"
	CAT = Woof
	Crow = Null
	EAGLE = Claws
	Rattler = coil
	Sparrow = House
	Trout = Brown

Map1F Constraints:
    size of key list:  7
    excludes:  ()
    includes:  ()
    key list:  ("dog", "eagle", "rattler", "trout", "bass", "sparrow", "crow")
    cat is in list?   false
    dog is in list?   true

Map1F - key list file provided:
	Bass = "Large mouth"
	Crow = Null
	Dog = Moo
	EAGLE = Claws
	Rattler = coil
	Sparrow = House
	Trout = Brown

Map1 Copy:
	Bass = "Large mouth"
	CAT = Woof
	Crow = Null
	Dog = Moo
	EAGLE = Claws
	Rattler = coil
	Sparrow = House
	Trout = Brown

PvlFlatMap2 Source (PvlGroup):
# Are slimey
Group = Snake
  Rattler = DiamondBack
End_Group

Map2 - No constraints:
	Rattler = DiamondBack

Map1 and Map2 combined - RATTLER is overwritten:
	Bass = "Large mouth"
	CAT = Woof
	Crow = Null
	Dog = Moo
	EAGLE = Claws
	Rattler = DiamondBack
	Sparrow = House
	Trout = Brown

Map3 - CLIMB values are appended:
	Climb = (Wall, Rock, Tree)
	Field = Run
	Fly = Sugar

Merging Map3 to Maps 1,2. Adding [ "3" ] new keywords.
Map1, Map2, and Map3 merged:
	Bass = "Large mouth"
	CAT = Woof
	Climb = (Wall, Rock, Tree)
	Crow = Null
	Dog = Moo
	EAGLE = Claws
	Field = Run
	Fly = Sugar
	Rattler = DiamondBack
	Sparrow = House
	Trout = Brown

Get map info for existing keys:
    Map has keyword=crow? true
    crow is Null?  true
    Map has keyword=climb? true
    All Values for climb: ("Wall", "Rock", "Tree")
    climb count:  3
    climb at index "0" is Null?  false
    climb at index "1" is Null?  false
    climb at index "2" is Null?  false
    Get first value of climb:   "Wall"
    Get second value of climb:  "Rock"
    Get third value of climb:   "Tree"
    Get fourth value of climb or return KingKong:  "KingKong"
    Get climb as PvlKeyword: Climb = (Wall, Rock, Tree)

Get map info for non-existent keys:
    Map has keyword=pencil? false
    All Values for pencil: ()
    pencil count:  0
    pencil is Null?  true
    Get value of pencil or return Lucy:  "Lucy"
    Get values for PvlKeyword('pencil', 'Linus'):  ("Linus")

Erasing climb keyword:  true
Reprint Map123 merged with CLIMB keyword erased:
	Bass = "Large mouth"
	CAT = Woof
	Crow = Null
	Dog = Moo
	EAGLE = Claws
	Field = Run
	Fly = Sugar
	Rattler = DiamondBack
	Sparrow = House
	Trout = Brown

Try to get CLIMB keyword after erased...
**PROGRAMMER ERROR** Keyword Climb does not exist!.

Try to get CAT keyword at non-existent index...
**PROGRAMMER ERROR** Index 10 does not exist for keyword CAT!.

Try to get non-existent pencil keyword...
**PROGRAMMER ERROR** Keyword pencil does not exist!.
