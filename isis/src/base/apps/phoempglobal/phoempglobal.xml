<?xml version="1.0" encoding="UTF-8"?>

<application name="phoempglobal" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://isis.astrogeology.usgs.gov/Schemas/Application/application.xsd">
  <brief>
    Fit empirical photometric functions to a Hapke model at several phase angles
  </brief>

  <description>
  <p>
    This program fits the Lunar-Lambert or Minnaert photometric function to the
    complex Hapke (1981; 1984; 1986) model at several <def link="Phase Angle">phase
    angles</def>. <i>phoempglobal</i> adjusts the limb-darkening and the overall brightness
    so that the sum-squared-residual between the two is minimized and results in
    a tight fit to the new empirical model.  The resulting best fit limb-darkening
    Minnaert K or Lunar-Lambert L and brightness values that is normalized as
    an empirical phase curve versus <def link="Phase
    Angle">phase angle</def> is output in a formatted table. The table, saved as a
    <def>PVL</def> file, consists of the PhaseList, KList or LList, PhaseCurveList,
    empirical function name, and the personal note.  The output PVL file is useful
    for related programs discussed later in this document.
  </p>
  <p>
    Note: The fit is calculated for a portion of the visible hemisphere of an
    idealized spherical and uniform planet such as Mars and the Earth. <i>phoempglobal</i>
    is considered an advanced program and may not be suitable for the ISIS-user novice.
  </p>
  <p>
    <b><i>phoempglobal</i> Companion Programs and Uses:</b>
  </p>
  <p>
    The programs listed below can utilize the output file of <i>phoempglobal</i> as input:
    <blockquote>
    <ul>
    <li>
      <i>photemplate</i> - used to create a template file consisting of parameter
      values for a selected photometric function to normalize images
    </li>
    <li>
      <i>photomet</i> - used to apply photometric normalization to an image
    </li>
    </ul>
    </blockquote>
  </p>
  <p>
    <b>User Input Requirements:</b>
    <blockquote>
    <ul>
    <li>Output <def>PVL</def> filename</li>
    <li>Empirical model (LunarLambert or Minnaert)</li>
    <li>Photometric function (HapkeHen or HapkeLeg)</li>
    <li>Parameter values for the Hapke model</li>
    <li>Atmospheric model (optional)</li>
    <li>User note that documents the input parameter values and its use</li>
    <li>Minimum and maximum <def link="Incidence Angle">incidence angle</def></li>
    <li>Minimum and maximum <def link="Emission Angle">emission angle</def></li>
    <li>Minimum and maximum <def link="Phase Angle">phase angle</def></li>
    <li>Fraction of phase angle to add to maximum
       <def link="Emission Angle">emission angle</def></li>
    <li>Number of <def link="Phase Angle">phase angles</def> to report to output file</li>
    </ul>
    </blockquote>
  </p>
  <p>
    The empirical photometric function is fitted to the Hapke model over a portion
    of the visible hemisphere of an idealized planet using the following:
  </p>
  <p>
    <blockquote>
    <ul>
    <li>INCMIN &lt;= <def link="Incidence Angle">incidence angle</def> &lt;=
        INCMAX </li>
    <li>EMAMIN &lt;= <def link="Emission Angle">emission angle</def> &lt;=
        EMAMAX + EMAMAX_PCOEFF * <def link="Phase Angle">phase angle</def></li>
    <li>INCMIN and EMAMIN are normally set to 0 </li>
    <li>INCMAX and EMAMAX are set to values approaching 90 to exclude only
       limited regions near the limb and terminator from the fit</li>
   </ul>
   </blockquote>
  </p>
  <p>
    The atmospheric model is optional.  It is important to define the
    atmospheric model based on the requirements of subsequent processing steps,
    which depends on whether the results will be applied to perform photometric
    normalization or for photoclinometry application.  If an option other than
    "NONE" is selected, the atmospheric scattering and surface photometric
    properties are included as part of the physical model to which the empirical
    model is fitted.
  </p>
  <p>
    The parameter settings for the Hapke model have been derived, and the results
    published by various individuals.  For the original description of the
    fitting process and a useful compilation of Hapke parameters from the
    scientific literature, see McEwen (1991).  The atmospheric model used in the
    fits is discussed by Kirk et al. (2000, 2001).
  </p>
  <p>
    Example:  Mars
  </p>
  <p>
    The following Hapke parameters for Mars are from Johnson
    et al. (1999) for IMP data of Photometry Flats (soil) and may be
    reasonably representative of Mars as a whole. Note that
    (HG1, HG2=1.0) is equivalent to (-HG1, HG2=0.0)
  </p>
  <p>
  <blockquote>
  <table border="1">
  <tr>
    <th>Band</th>
    <th>WH</th>
    <th>B0</th>
    <th>HH</th>
    <th>HG1</th>
    <th>HG2</th>
  </tr>
  <tr>
    <td>Red</td>
    <td>0.52</td>
    <td>0.025</td>
    <td>0.170</td>
    <td>0.213</td>
    <td>1.000</td>
  </tr>
  <tr>
    <td>Green</td>
    <td>0.29</td>
    <td>0.290</td>
    <td>0.170</td>
    <td>0.190</td>
    <td>1.000</td>
  </tr>
  <tr>
    <td>Blue</td>
    <td>0.16</td>
    <td>0.995</td>
    <td>0.170</td>
    <td>0.145</td>
    <td>1.000</td>
  </tr>
  </table>
  </blockquote>
  </p>
  <p>
    Kirk et al. (2000) found that Mars whole-disk limb-darkening data of
    Thorpe (1973) are consistent with THETA=30, but results of Tanaka and
    Davis (1988) based on matching photoclinometry of local areas to shadow
    data are more consistent with THETA=20 when the domain of the fit is
    restricted to small <def link="Emission Angle">emission angles</def>
     (&lt;= 20 degrees).
  </p>
  <p>
    Values of the photometric parameters for the Martian atmosphere, adopted
    from Tomasko et al. (1999) are as follows:
  </p>
  <p>
  <blockquote>
  <table border="1">
  <tr>
    <th>Band</th>
    <th>WHA</th>
    <th>HGA</th>
  </tr>
  <tr>
    <td>Red</td>
    <td>0.95</td>
    <td>0.68</td>
  </tr>
  <tr>
    <td>Blue</td>
    <td>0.76</td>
    <td>0.78</td>
  </tr>
  </table>
  </blockquote>
  </p>
  <p>
    <b>If result of <i>phoempglobal</i> will be used in <i>photomet</i>:</b>
  </p>
  <p>
    All the options available in <i>phoempglobal</i> are also available in the
    <i>photomet</i> program.  So, the best option is to forgo the atmospheric
    correction in <i>phoempglobal</i>, and instead apply the atmospheric correction in
    <i>photomet</i>.  Set the parameters ATMNAME=NONE and ADDOFFSET=NO to obtain the
    empirical model for the surface alone.  The brightness and limb-darkening
    values output by <i>phoempglobal</i> and the LunarLambertEmpirical or
    MinnaertEmpirical photometric function are applied with <i>photomet</i> to correct
    the image.  If a correction for atmospheric scattering is desired, one of the
    atmospheric models can also be selected when the parameters are defined.  The
    photometrically normalized images can then be equalized and mosaicked together.
  </p>

  <p>
    <b>If result of <i>phoempglobal</i> will be used to support photoclinometry application:</b>
  </p>

  <p>
    Fitting with an atmospheric model and setting the parameter ADDOFFSET=YES in
    <i>phoempglobal</i> is more useful for the photoclinometry application, where images are
    normally corrected by subtracting a uniform haze estimate rather than by applying
    a full atmospheric scattering model.  The parameter EMAMAX should be set to a
    relatively small value that represents the typical range of surface slopes, and
    the fit will apply to images with vertical viewing.  The table of fits at multiple
    <def link="Phase Angle">phase angles</def> output by <i>phoempglobal</i> can be
    interpolated, and used as input to a photoclinometry application for any given image.
  </p>
<p>
<br/>
References:
</p>
<p>
Hapke, B.W., 1981, Bidirectional reflectance spectroscopy 1: Theory,
  J. Geophys. Res., v. 86, p. 3039-3054.<br/><br/>
Hapke, B., 1984, Bidirectional reflectance spectroscopy 3: Corrections for
  macroscopic roughness, Icarus, v. 59, p. 41-59.<br/><br/>
Hapke, B., 1986, Bidirectional reflectance spectroscopy 4: The extinction
  coefficient and the opposition effect, Icarus, v. 67, p. 264-280.<br/><br/>
Johnson, J.R., et al., 1999, Preliminary Results on Photometric Properties of
  Materials at the Sagan Memorial Station, Mars. J. Geophys. Res., v. 104,
  p. 8809-8830. <br/><br/>
Kirk, R.L., Thompson, K.T., Becker, T.L., and Lee, E.M., 2000,
  Photometric modeling for planetary cartography, Lunar Planet. Sci., XXXI,
  Abstract #2025, Lunar and Planetary Institute, Houston (CD-ROM).<br/><br/>
Kirk, R.L., Thompson, K.T., and Lee, E.M., 2001,  Photometry of the martian
  atmosphere:  An improved practical model for cartography and photoclinometry,
  Lunar Planet. Sci., XXXII, Abstract #1874, Lunar and Planetary Institute,
  Houston (CD-ROM). <br/><br/>
McEwen, A.S., 1991, Photometric functions for photo-clinometry and other
  applications, Icarus, v. 92, p. 298-311.<br/><br/>
Tanaka, K.L., and and Davis, P.A., 1988, Tectonic History of the Syria Planum
  Provice of Mars, J. Geophys. Res., v. 93, p. 14893-14917.<br/><br/>
Thorpe, T.E., 1973, Mariner 9 Photometric Observations of Mars from
  November 1971 through March 1972, Icarus, v. 20, p. 482-489.<br/><br/>
Tomasko, M.G., et al., 1999, Properties of Dust in the Martian Atmosphere from
  the Imager on Mars Pathfinder, J. Geophys. Res., v. 104, p. 8987-9007.<br/><br/>
</p>
  </description>

  <category>
    <categoryItem>Radiometric and Photometric Correction</categoryItem>
  </category>

  <oldName>
    <item>pho_emp_global</item>
  </oldName>

  <seeAlso>
    <applications>
      <item>photemplate</item>
      <item>photomet</item>
    </applications>
  </seeAlso>

  <history>
    <change name="Randy Kirk" date= "1999-11-16">
      USGS Flagstaff Original Version
    </change>
    <change name="Janet Barrett"  date="2003-01-13">
      Ported pho_fit_global from the VAX and renamed it
      pho_emp_global in isis2
    </change>
    <change name="Sharmila Prasad" date="2011-08-24">
      Isis3 Original version, pho_emp_global  ported from isis2 to isis3 
      phoempglobal
    </change>
    <change name="Randy Kirk" date="2011-09-25">
      Updated documentation for the phoempglobal program.
    </change>
    <change name="Ella Mae Lee" date="2013-01-25">
      Updated documentation, and added links to the glossary and an
      example, fixes #451.
    </change>
    <change name="Lynn Weller" date="2013-02-25">
      Removed links to applications imbedded in text and replaced with
      italicized application name.  Added application links to the
      "Related Objects and Documents" section of the documentation.
      Fixes mantis ticket #1525.
    </change>
  </history>

  <groups>
    <group name="Files">
      <parameter name="TO">
        <type>filename</type>
        <fileMode>output</fileMode>
        <brief>
          Output text filename
        </brief>
        <description>
          This output is a <def>PVL</def> file that contains the following:
	  <ul>
	  <li>User note - description entered by the user</li>
	  <li>Function name - LunarLambertEmpirical or MinnaertEmpirical</li>
	  <li>PhaseList - list of <def link="Phase Angle">phase angles</def></li>
	  <li>KList or LList - list of best fit limb-darkening values</li>
          <li>PhaseCurveList - list of brightness values</li>
	  </ul>
	  The output file is formatted so it can be used by the program <i>photemplate</i>
	  (used to edit the parameters) or <i>photomet</i> (used to apply photometric
	  normalization to an image).
        </description>
        <filter>
          *.txt *.pvl
        </filter>
      </parameter>
    </group>

    <group name="User Note">
      <parameter name="NOTE">
        <type>string</type>
        <brief>
          User note to add to the output text file
        </brief>
        <internalDefault>None Specified</internalDefault>
        <description>
          This is a note entered by the user.  The user note parameter provides
	  a space for digital note-taking.  We recommend that the note space
	  contain a description of how the output file will be used and the
	  input parameter settings that were used to derive the values for the
	  empirical photometric function.  See
	    "$ISISROOT/appdata/templates/photometry/marsred.pvl" for an example.
        </description>
      </parameter>
    </group>

    <group name="HAPKE">
      <parameter name="PHTNAME">
        <type>combo</type>
        <default>
          <item>HAPKEHEN</item>
        </default>
        <brief>Surface photometric model to be used</brief>
        <description>
          A Hapke (1981; 1984; 1986) photometric model is always used as the model
          to which the empirical functions are fitted. The options correspond to
	  variants of the Hapke model with different types of model for the single
	  particle phase (scattering) function.
        </description>

        <list>
          <option value="HAPKEHEN">
            <brief>
              Hapke Henyey-Greenstein photometric model
            </brief>
            <description>
              This is the two-parameter version of the Henyey-Greenstein single
              particle phase function, with parameters HG1 and HG2.
            </description>
            <exclusions>
              <item>BH</item>
              <item>CH</item>
            </exclusions>
          </option>
          <option value="HAPKELEG">
            <brief>
              Hapke Legendre photometric model
            </brief>
            <description>
              This is a two-term Legendre Polynomial expansion of the single
              particle phase function, with parameters BH and CH.
            </description>
            <exclusions>
              <item>HG1</item>
              <item>HG2</item>
            </exclusions>
          </option>
        </list>
      </parameter>

      <parameter name="WH">
        <type>double</type>
        <brief>
          Single scattering albedo
        </brief>
        <description>
          The Hapke single-scattering <def link="Albedo">albedo</def> of
	  surface particles, see Hapke (1981).  Not to be confused with
	  albedo WHA of the atmospheric particles.
        </description>
        <minimum inclusive="no">0.0</minimum>
        <maximum inclusive="yes">1.0</maximum>
       </parameter>

      <parameter name="HH">
        <type>double</type>
        <brief>
          Hapke opposition surge width
        </brief>
        <description>
          The Hapke opposition surge width.  The width parameter for the
	  opposition effect for the surface if hapkehen or hapkeleg is used,
	  see Hapke (1984).
        </description>
        <minimum inclusive="yes">0.0</minimum>
       </parameter>

      <parameter name="B0">
        <type>double</type>
        <brief>
          Hapke opposition surge strength
        </brief>
        <description>
          The Hapke opposition surge strength. The magnitude of the opposition
          effect for the surface if hapkehen or hapkeleg is used, see Hapke (1984).
	</description>
        <minimum inclusive="yes">0.0</minimum>
      </parameter>

      <parameter name="THETA">
        <type>double</type>
        <brief>
          Surface roughness in degrees
        </brief>
        <description>
          The small scale surface roughness value in degrees. The "macroscopic roughness"
	  of the surface as it affects the photometric behavior, see Hapke (1986).
	  The roughness correction is evaluated if theta is given any
	  value other than 0.0, but the computation speed is extremely slow.
        </description>
        <minimum inclusive="yes">0.0</minimum>
        <maximum inclusive="yes">90.0</maximum>
       </parameter>

      <parameter name="HG1">
        <type>double</type>
        <brief>
          Hapke Henyey-Greenstein coefficient
	</brief>
        <description>
          Asymmetry parameter used in Hapke Henyey-Greenstein model
          for the scattering phase function of single particles in the
          surface, see Hapke (1981).  The two-parameter Henyey-Greenstein
          function is as follows:
          <blockquote>
          P(phase)=(1-hg2) * (1-hg1**2)/(1+hg1**2+2*hg1*cos(phase))**1.5
          + hg2  * (1-hg1**2)/(1+hg1**2-2*hg1*cos(phase))**1.5
          </blockquote>
        </description>
        <minimum inclusive="no">-1.0</minimum>
        <maximum inclusive="no">1.0</maximum>
      </parameter>

      <parameter name="HG2">
        <type>double</type>
        <brief>
          Hapke Henyey-Greenstein Coefficient
        </brief>
        <description>
          The Hapke Henyey-Greenstein coefficient for a single particle phase
          function.  The second parameter, of the two-parameter Henyey-Greenstein
          model, for the scattering phase function of single particles in the
          surface.  This parameter controls the proportions in a linear
          mixture of ordinary Henyey-Greenstein phase functions with asymmetry
          parameters equal to +hg1 and -hg1.  See HG1 for the full formula.
        </description>
        <minimum inclusive="yes">0.0</minimum>
        <maximum inclusive="yes">1.0</maximum>
      </parameter>

      <parameter name="BH">
        <type>double</type>
        <brief>
           Hapke Legendre coefficient
        </brief>
        <description>
          The Hapke Legendre coefficient for a single particle phase
          function.  A two-term Legendre polynomial is used for the scattering
          phase function of single particles in the surface:
          <blockquote>
          P(phase) = 1 + bh * p1(cos(phase)) + ch * p2(cos(phase)) <br/>
          </blockquote>
          Where p1 and p2 are the first and second order Legendre polynomials.
	  Bh is not to be confused with the Legendre coefficient bha of the
	  phase function for atmospheric particles, used when
          atmname=anisotropic1 or anisotropic2.
        </description>
        <minimum inclusive="no">-1.0</minimum>
        <maximum inclusive="no">1.0</maximum>
      </parameter>

      <parameter name="CH">
        <type>double</type>
        <brief>
          Hapke Legendre coefficient
        </brief>
        <description>
          The Hapke Legendre coefficient for a single particle phase
          function.  A two-term Legendre polynomial is used for the scattering
          phase function of single particles in the surface: <br/>
          <blockquote>
          P(phase) = 1 + bh * p1(cos(phase)) + ch * p2(cos(phase))
          </blockquote>
          Where p1 and p2 are the first and second order Legendre
          polynomials.
        </description>
        <minimum inclusive="no">-1.0</minimum>
        <maximum inclusive="no">1.0</maximum>
      </parameter>
    </group>

    <group name="Empirical">
      <parameter name="MODEL">
        <type>combo</type>
        <internalDefault>LunarLambert</internalDefault>
        <brief>
          Photometric function to fit to the Hapke model
        </brief>
        <description>
          Specify a photometric function to fit to the Hapke model. The
	  lists of brightness and limb-darkening values can be used with the
	  LunarLambertEmpirical or MinnaertEmpirical photometric functions in
	  the photometric normalization program <i>photomet</i>.
        </description>
        <list>
          <option value="LUNARLAMBERT">
            <brief>
              LunarLambert photometric function
            </brief>
            <description>
              Fit the LunarLambert photometric function to the Hapke Model to
	      derive the parameters for the LunarLambertEmpirical photometric
	      function. The LunarLambertEmpirical model as defined by
              McEwen (1991) and used by the program <i>photomet</i> is
	      <blockquote>
                func=b(phase) * ((1-l(phase))*u0 + 2*l(phase)*u0/(u0+u))
	      </blockquote>
              where phase is the <def link="Phase Angle">phase angle</def>, and
	      u0 and u are the
	      cosines of the <def link="Incidence Angle">incidence</def> and
	      <def link="Emission Angle">emission angles</def>, respectively.
	      </description>
          </option>
          <option value="MINNAERT">
            <brief>
              Minnaert photometric function
            </brief>
            <description>
              Fit the Minnaert photometric function to the Hapke Model to
	      derive the parameters for the MinnaertEmpirical photometric
	      function. The MinnaertEmpirical model as defined by
              McEwen (1991) and used by the program <i>photomet</i> is
	      <blockquote>
              func=b(phase) * u0**k(phase) * u**(k(phase)-1)
	      </blockquote>
              where phase is the <def link="Phase Angle">phase angle</def>,
	      and u0 and u are the cosines of the
	      <def link="Incidence Angle">incidence</def> and
	      <def link="Emission Angle">emission angles</def>, respectively.
            </description>
          </option>
        </list>
      </parameter>
    </group>

    <group name="Atmospheric Scattering Model">
      <parameter name="ATMNAME">
        <type>combo</type>
        <internalDefault>NONE</internalDefault>
        <default>
          <item>NONE</item>
        </default>
        <brief>
          Atmospheric scattering model to be used
	</brief>
        <description>
          <p>
          Phoempglobal incorporates all the same atmospheric scattering models in
	  the program <i>photomet</i> that is used to make photometric corrections
	  to images.  The empirical model for the surface alone is obtained by setting
	  ATMNAME=NONE and ADDOFFSET=NO in <i>phoempglobal</i>, and then the atmospheric
	  scattering parameters are applied in <i>photomet</i>.
	  </p>
	  <p>
	  If an option other than NONE is selected, an atmospheric scattering
          model will be included as part of the physical model to which the
	  empirical model is fitted.  Six available atmospheric models are
	  categorized into three classes that differ in their treatment of the
	  single particle scattering function for atmospheric particles. Each
	  of these classes can be evaluated to a first order (faster) or second
	  order (more accurate) approximation. Atmospheric scattering in all the
          models both attenuates the surface signal and adds its own (uniform)
          contribution to the image <def link="Radiance">radiance</def>.
	  Therefore, unless NONE is selected, set ADDOFFSET=YES so that the
	  additive contribution of the atmosphere will be modeled by an additive
	  constant in the fit.  This option is more useful for
          application to photoclinometry, where images are normally corrected
          by subtracting a uniform haze estimate rather than by applying a
          full atmospheric scattering model.
	  </p>
        </description>
        <list>
          <option value="NONE">
            <brief>
              No atmospheric scattering model
            </brief>
            <description>
              The <def link="Radiance">radiance</def> from the Hapke surface
	      is not modified by atmospheric scattering.
            </description>
            <exclusions>
              <item>TAU</item>
              <item>WHA</item>
              <item>HGA</item>
              <item>HNORM</item>
              <item>ADDOFFSET</item>
              <item>BHA</item>
            </exclusions>
          </option>
          <option value="ISOTROPIC1">
            <brief>
              First order isotropic
            </brief>
            <description>
              Atmospheric particles are assumed to scatter light isotropically.
              The effects of this scattering are calculated exactly to first
              order.
            </description>
            <inclusions>
              <item>TAU</item>
              <item>WHA</item>
              <item>HNORM</item>
              <item>ADDOFFSET</item>
            </inclusions>
            <exclusions>
              <item>HGA</item>
              <item>BHA</item>
            </exclusions>
          </option>
          <option value="ISOTROPIC2">
            <brief>
              Second order isotropic
            </brief>
            <description>
              Atmospheric particles are assumed to scatter light isotropically.
              The effects of this scattering are calculated exactly to second
              order.
            </description>
            <inclusions>
              <item>TAU</item>
              <item>WHA</item>
              <item>HNORM</item>
              <item>ADDOFFSET</item>
            </inclusions>
            <exclusions>
              <item>HGA</item>
              <item>BHA</item>
            </exclusions>
          </option>
          <option value="ANISOTROPIC1">
            <brief>
              First order anisotropic
            </brief>
            <description>
              Atmospheric particles are assumed to scatter light according
              to a Legendre polynomial model with a single term. The effects
              of this scattering are calculated exactly to first order.
            </description>
            <inclusions>
              <item>TAU</item>
              <item>WHA</item>
              <item>BHA</item>
              <item>HNORM</item>
              <item>ADDOFFSET</item>
            </inclusions>
            <exclusions>
              <item>HGA</item>
            </exclusions>
          </option>
          <option value="ANISOTROPIC2">
            <brief>
              Second order anisotropic
            </brief>
            <description>
              Atmospheric particles are assumed to scatter light according to
              a Legendre polynomial model with a single term. The effects of
              this scattering are calculated exactly to second order.
            </description>
            <inclusions>
              <item>TAU</item>
              <item>WHA</item>
              <item>BHA</item>
              <item>HNORM</item>
              <item>ADDOFFSET</item>
            </inclusions>
            <exclusions>
              <item>HGA</item>
            </exclusions>
          </option>
          <option value="HAPKEATM1">
            <brief>
              First order Henyey-Greenstein
            </brief>
            <description>
              Atmospheric particles are assumed to scatter light according to
              a single-parameter Henyey-Greenstein function (see the description
              of the surface scattering parameter HG1 for the equation that
              combines two such functions for surface particles). The effects
              of this scattering are approximated by using a first order solution
              for multiple scattering by isotropic particles and making a
              correction to the distribution of singly scattered radiation. The
              model is called HAPKEATM1 because this correction for the single
              particle phase function is similar to the one developed by Hapke
              (1981) for surface scattering.
            </description>
            <inclusions>
              <item>TAU</item>
              <item>WHA</item>
              <item>HGA</item>
              <item>HNORM</item>
              <item>ADDOFFSET</item>
            </inclusions>
            <exclusions>
              <item>BHA</item>
            </exclusions>
          </option>
          <option value="HAPKEATM2">
            <brief>
              Second order Henyey-Greenstein
            </brief>
            <description>
              Atmospheric particles are assumed to scatter light according to
              a single parameter Henyey-Greenstein function (see the description
              of the surface scattering parameter HG1 for the equation that
              combines two such functions for surface particles). The effects
              of this scattering are approximated by using a second order solution
              for multiple scattering by isotropic particles and making a
              correction to the distribution of singly scattered radiation. The
              model is called HAPKEATM2 because this correction for the single
              particle phase function is similar to the one developed by Hapke
              (1981) for surface scattering.
            </description>
            <inclusions>
              <item>TAU</item>
              <item>WHA</item>
              <item>HGA</item>
              <item>HNORM</item>
              <item>ADDOFFSET</item>
            </inclusions>
            <exclusions>
              <item>BHA</item>
            </exclusions>
          </option>
        </list>
      </parameter>

      <parameter name="TAU">
        <type>double</type>
        <brief>
          Normal atmospheric optical depth
	</brief>
        <description>
          Normal atmospheric optical depth
        </description>
        <minimum inclusive="yes">0.0</minimum>
       </parameter>

      <parameter name="WHA">
        <type>double</type>
        <brief>
          Single-scattering albedo
        </brief>
        <description>
          This is the single-scattering <def link="Albedo">albedo</def> of atmospheric
	  particles, not to be confused with the albedo WH of surface particles.
        </description>
        <minimum inclusive="no">0.0</minimum>
        <maximum inclusive="yes">1.0</maximum>
       </parameter>

      <parameter name="HGA">
        <type>double</type>
        <brief>
          Henyey-Greenstein coefficient for atmospheric particles
        </brief>
        <description>
          Parameter used in the Henyey-Greenstein single particle phase
          function for atmospheric particles when ATMNAME=HAPKEATM1 or
          ATMNAME=HAPKEATM2. This is the asymmetry parameter for a single
          term Henyey-Greenstein model:
	  <blockquote>
	  p(phase) = (1-hga**2)/(1+hga**2+2*hga*cos(phase))**1.5
	  </blockquote>
          Not to be confused with corresponding parameter HG1 for the
          surface particles.
        </description>
        <minimum inclusive="no">-1.0</minimum>
        <maximum inclusive="no">1.0</maximum>
       </parameter>

      <parameter name="BHA">
        <type>double</type>
        <brief>
          Atmospheric particle Legendre coefficient
        </brief>
        <description>
          Coefficient of the first order Legendre polynomial in the
          single particle phase function for atmospheric scattering.
          When ATMNAME=ANISOTROPIC1 or ATMNAME=ANISOTROPIC2, a two-term
          Legendre polynomial expansion is used to represent the
          scattering phase function of single particles in the atmosphere:
	  <blockquote>
          p(phase) = 1 + bha * p1(cos(phase))
	  </blockquote>
	  Where, P1 is the first order Legendre polynomial, and not to be
	  confused with the corresponding parameter BH for the surface.
        </description>
        <minimum inclusive="yes">-1.0</minimum>
        <maximum inclusive="yes">1.0</maximum>
       </parameter>

      <parameter name="HNORM">
        <type>double</type>
        <brief>
          Atmospheric shell thickness
        </brief>
        <description>
          Atmospheric shell thickness normalized to planet radius, used
          to correct the path lengths of atmospheric transmission for the
          spherical geometry of the planet. Default 0.003 is for Mars.
        </description>
        <minimum inclusive="yes">0.0</minimum>
       </parameter>

      <parameter name="ADDOFFSET">
        <type>boolean</type>
        <brief>
          Allow additive offset in fit
        </brief>
        <default>
          <item>false</item>
        </default>
        <description>
          <p>
	  If true, the additive contribution of the atmosphere will be modeled
          by an additive constant in the fit of the empirical function at each
          phase angle.
	  </p>
	  <p>
	  Because the program <i>photomet</i> incorporates all the same
	  atmospheric scattering models as Phoempglobal, one would normally
	  set ATMNAME=NONE and ADDOFFSET=NO to obtain an empirical model for
	  the surface alone, and then apply the atmospheric scattering parameters
	  in <i>photomet</i>. Fitting with an atmospheric model and ADDOFFSET=YES
	  in <i>phoempglobal</i> is more useful for application to photoclinometry,
	  where images are normally corrected by subtracting a uniform haze
	  estimate rather than by applying a full atmospheric scattering model.
	  </p>
        </description>
      </parameter>
    </group>

    <group name="Fit Range of Angles">
      <parameter name="EMAMIN">
        <type>double</type>
        <brief>
          Minimum emission angle
        </brief>
        <default><item> 0.0</item></default>
        <description>
          This is the minimum <def link="Emission Angle">emission angle</def> to
	  be included.  The empirical photometric  function will be fitted to the
	  Hapke model over a portion of the visible hemisphere of an idealized
	  planet, with the following:
	  <ul>
	  <li>INCMIN &lt;= incidence angle &lt;= INCMAX </li>
	  <li>EMAMIN &lt;= emission angle &lt;= EMAMAX + EMAMAX_PCOEFF * phase angle</li>
	  <li>INCMIN and EMAMIN are normally set to 0 </li>
	  <li>INCMAX and EMAMAX are set to values approaching 90 to exclude only
	      limited regions near the limb and terminator from the fit</li>
	  </ul>
        </description>
        <minimum inclusive="yes">0.0</minimum>
        <maximum inclusive="no">90.0</maximum>
      </parameter>

      <parameter name="EMAMAX">
        <type>double</type>
        <brief>
          Maximum emission angle
        </brief>
        <description>
          This is the maximum <def link="Emission Angle">emission angle</def>
	  to be included. The empirical
          photometric function will be fitted to the Hapke model over a
          portion of the visible hemisphere of an idealized planet, with
	  the following:
	  <ul>
	  <li>INCMIN &lt;= incidence angle &lt;= INCMAX </li>
	  <li>EMAMIN &lt;= emission angle &lt;= EMAMAX + EMAMAX_PCOEFF * phase angle</li>
	  <li>INCMIN and EMAMIN are normally set to 0 </li>
	  <li>INCMAX and EMAMAX are set to values approaching 90 to exclude only
	      limited regions near the limb and terminator from the fit</li>
	  </ul>
        </description>
        <minimum inclusive="no">0.0</minimum>
        <maximum inclusive="yes">90.0</maximum>
        <default><item> 90.0</item></default>
      </parameter>

      <parameter name="EMAMAX_PCOEFF">
        <type>double</type>
        <brief>
          Fraction of phase angle to add to maximum emission angle
        </brief>
        <description>
          This parameter allows the range of <def
	  link="Emission Angle">emission angles</def> included in
          the fit to increase slightly at high <def
	  link="Phase Angle">phase angles</def>, because
          otherwise the region of fit becomes very small. The
          empirical photometric function will be fitted to the Hapke
          model over a portion of the visible hemisphere of an
          idealized planet, with the following:
	  	  <ul>
	  <li>INCMIN &lt;= incidence angle &lt;= INCMAX </li>
	  <li>EMAMIN &lt;= emission angle &lt;= EMAMAX + EMAMAX_PCOEFF * phase angle</li>
	  <li>INCMIN and EMAMIN are normally set to 0 </li>
	  <li>INCMAX and EMAMAX are set to values approaching 90 to exclude only
	      limited regions near the limb and terminator from the fit</li>
	  </ul>
	  Use EMAMAC_PCOEFF=0.1111 to output phase angles at 10 degree increments.
        </description>
      </parameter>

      <parameter name="INCMIN">
        <brief>
          Minimum incidence angle
        </brief>
        <type>double</type>
        <default><item> 0.0</item></default>
        <description>
          This is the minimum <def link="Incidence Angle">incidence angle</def>
	  to be included. The empirical
          photometric function will be fitted to the Hapke model over
          a portion of the visible hemisphere of an idealized planet, with
          the following:
	  <ul>
	  <li>INCMIN &lt;= incidence angle &lt;= INCMAX </li>
	  <li>EMAMIN &lt;= emission angle &lt;= EMAMAX + EMAMAX_PCOEFF * phase angle</li>
	  <li>INCMIN and EMAMIN are normally set to 0 </li>
	  <li>INCMAX and EMAMAX are set to values approaching 90 to exclude only
	      limited regions near the limb and terminator from the fit</li>
	  </ul>
        </description>
        <minimum inclusive="yes">0.0</minimum>
        <maximum inclusive="no">90.0</maximum>
       </parameter>

      <parameter name="INCMAX">
        <brief>
          Maximum incidence angle
        </brief>
        <type>double</type>
        <default><item> 90.0</item></default>
        <description>
          This is the maximum <def link="Incidence Angle">incidence angle</def>
	  to be included. The empirical photometric function will be fitted to
	  the Hapke model over a portion of the visible hemisphere of an
	  idealized planet, with the following:
	  <ul>
	  <li>INCMIN &lt;= incidence angle &lt;= INCMAX </li>
	  <li>EMAMIN &lt;= emission angle &lt;= EMAMAX + EMAMAX_PCOEFF * phase angle</li>
	  <li>INCMIN and EMAMIN are normally set to 0 </li>
	  <li>INCMAX and EMAMAX are set to values approaching 90 to exclude only
	      limited regions near the limb and terminator from the fit</li>
	  </ul>
        </description>
        <minimum inclusive="no">0.0</minimum>
        <maximum inclusive="yes">90.0</maximum>
       </parameter>

      <parameter name="PHMIN">
        <brief>
          Minimum phase angle
        </brief>
        <type>double</type>
        <default><item> 0.0</item></default>
        <description>
          This is the minimum <def link="Phase Angle">phase angle</def> at which
	  a fit will be performed, corresponding to the first value (PHASELIST)
	  in the output table.
        </description>
        <minimum inclusive="yes">0.0</minimum>
        <maximum inclusive="no">180.0</maximum>
      </parameter>

      <parameter name="PHMAX">
        <brief>
          Maximum phase angle
        </brief>
        <type>double</type>
        <default><item> 180.0</item></default>
        <description>
          This is the maximum <def link="Phase Angle">phase angle</def> at which
	  a fit will be performed, corresponding to the last value (PHASELIST)
	  in the output table.
        </description>
        <minimum inclusive="no">0.0</minimum>
        <maximum inclusive="yes">180.0</maximum>
      </parameter>

      <parameter name="NPH">
        <brief>
          Number of phase angles
        </brief>
        <type>integer</type>
        <default><item> 20</item></default>
        <description>
          Number of <def link="Phase Angle">phase angles</def> at which a fit
	  will be performed, equal to the number of values in the output table,
	  which is normally set to 20 to output results at every 10 degree
	  increment of phase angles.
        </description>
        <minimum inclusive="yes">1</minimum>
      </parameter>
    </group>
  </groups>
  <examples>
     <example>
      <brief>Create a PVL file with <i>phoempglobal</i></brief>
      <description>
        This example shows the GUI and the input setting for each parameter name
	in the <i>phoempglobal</i> program.
      </description>
      <terminalInterface>
        <commandLine>
 	  to=new_test.pvl note="phoempglobal test using photometric settings for
	  Mercury provided by Brett D. Parameters: to=new_test.pvl wh=0.249831313
	  hh=0.075 b0=2.3 theta=7.717173828 hg1=0.247542306 hg2=0.57542686
	  model=lunarlambert emamin=0 emamax=90 emamax_pcoeff=1 incmin=0 incmax=90
	  phmin=0 phmax=180 nph=20" wh=0.249831313 hh=0.075 b0=2.3 theta=7.717173828
	  hg1=0.247542306 hg2=0.57542686 model=lunarlambert emamin=0 emamax=90
	  emamax_pcoeff=1 incmin=0 incmax=90 phmin=0 phmax=180 nph=20
        </commandLine>
        <description>
         Run <i>phoempglobal</i> to generate a PVL file with the parameter values for the
         LunarLambertEmpirical photometric model.
        </description>
      </terminalInterface>
      <guiInterfaces>
        <guiInterface>
          <image src="assets/images/phoempglobal_gui_image.png" width="595" height="975">
            <brief><i>phoempglobal</i> GUI</brief>
            <description>
              Screenshot of GUI version of the application.  The parameter values
              are entered by the user, and the results are output to a text file.
            </description>
            <thumbnail src="assets/thumbs/phoempglobal_gui_thumb.png" caption="phoemglobal GUI" width="156" height="255"/>
          </image>
        </guiInterface>
      </guiInterfaces>
      <dataFiles>
        <dataFile path="assets/new_test.pvl">
          <brief>Output PVL file</brief>
          <description>
            The output <def>PVL</def> file contains the photometric parameter settings
	    for the LunarLambertEmpirical photometric function.  This file can be used
	    as input to the <i>photomet</i> program with the FROMPVL parameter name. <br/> <br/>
	    Note:  The phase angles listed in the PVL file is not in 10 degree increments.
	    The setting for EMAMAX_PCOEFF influences the phase angle values that are
	    output.  Use EMAMAC_PCOEFF=0.1111 to output phase angles at 10 degree increments.
          </description>
          <parameterName>
            TO
          </parameterName>
        </dataFile>
      </dataFiles>
    </example>
   </examples>
</application>
