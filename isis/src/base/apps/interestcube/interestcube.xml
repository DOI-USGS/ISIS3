<?xml version="1.0" encoding="UTF-8"?>

<application name="interestcube" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://isis.astrogeology.usgs.gov/Schemas/Application/application.xsd">

  <brief>
    Create interest cube
  </brief>

  <description>
    <p>
      This program, interestcube, uses an interest operator to quantify how interesting each point
      of the input cube is. The size of the output cube matches the input cube. Each DN value of
      the output cube represents the quality of interest that corresponds to points in the input
      cube.  The values of the output cube represent the quality of interest of each corresponding
      point in the input cube.
    </p>
    <p>
      The user must select an interest operator (algorithm) from one of the following:
      1) Förstner, 2) Gradient 3) Moravec and 4) Standard Deviation. The operator and its required
      values are specified in the input PVL parameter for interestcube. This input PVL is a text
      file that may be copied from the Examples section of this page.
    </p>
    <p>
      Note: Forstner operator output will need to be manually stretched to see visual results,
      due to the wide range of values it creates.
    </p>
  </description>
  <history>
    <change name="Steven Koechle" date="2007-08-14">
      Original version
    </change>
    <change name="Steven Koechle" date="2007-09-14">
      Renamed app from "Interest" -> "interest"
    </change>
    <change name="Steven Koechle" date="2008-08-20">
      Renamed app from "interest" -> "interestcube"
    </change>
    <change name="Sharmila Prasad" date="2010-04-14">
      Create a universal ground map of the input cube to be passed onto the
      Interest Operator to calculate the Emission Angle
    </change>
    <change name="Ian Humphrey" date="2014-06-03">
      Closed the open cube to prevent errors from running sequential data in GUI. Fixes #1002.
    </change>
    <change name="Makayla Shepherd" date="2015-02-06">
      Initialized the global variables and changed the catch in ISISMain in order to
      close the cube before the exception is thrown. Fixes #2124, 2125.
    </change>
    <change name="Curtis Rose" date="2016-04-29">
      Fixed a documentation mistake. Extraneous information was removed from a command line example.
      Fixes #3910.
    </change>
  </history>

  <category>
    <categoryItem>Filters</categoryItem>
  </category>

  <groups>
    <group name="Files">
      <parameter name="FROM">
        <type>cube</type>
        <fileMode>input</fileMode>
        <brief>
          Input cube
        </brief>
        <description>
          Use this parameter to select the input cube.
        </description>
        <filter>
          *.cub
        </filter>
      </parameter>

      <parameter name="PVL">
        <type>filename</type>
        <fileMode>input</fileMode>
        <brief>
          Input PVL
        </brief>
        <description>
          Use this parameter to select the PVL file that gives the program parameters.
          Note: to make the program function properly the delta keywords and valid interest
          keyword will be changed to a value of 0.
        </description>
      </parameter>

      <parameter name="TO">
        <type>cube</type>
        <pixelType>real</pixelType>
        <fileMode>output</fileMode>
        <brief>
          Output cube
        </brief>
        <description>
          This cube will contain the results of the Interest Operator.
        </description>
      </parameter>
    </group>
  </groups>

  <examples>
   <example>
      <brief>
      Using interestcube with Förstner operator.
      </brief>
      <description>
        The use of Interest to ingest an ISIS cube and output a cube with interest values.
      </description>
      <terminalInterface>
        <commandLine>
	  from= ab102401.cub
          pvl= input.pvl
	  to= out.cub
        </commandLine>
        <description>
	  This example shows the use of interestcube to create an ISIS cube of interest
          values from a standard ISIS cube. This example will use a 3x3 boxcar using the
          Förstner Operator.
        </description>
     </terminalInterface>

      <guiInterfaces>
        <guiInterface>
          <image width="450" height="550" src="assets/images/InterestGUI.jpg">
            <brief>
	      Example GUI
            </brief>
            <description>
	      Screenshot of the GUI with parameters.
            </description>
            <thumbnail width="164" height="200" caption="Interest GUI"
                       src="assets/thumbs/InterestGUI.jpg" />
          </image>
        </guiInterface>
      </guiInterfaces>

      <inputImages>
          <image width="458" height="550" src="assets/images/ab102401.jpg">
          <brief>
	    Input ISIS cube
          </brief>
          <description>
	    The input cube that the Interest Operator is to run on.
          </description>
          <thumbnail caption= "This is the input ISIS cube."
                     src="assets/thumbs/ab102401.jpg" width="167" height="200"/>
          <parameterName>FROM</parameterName>
        </image>
      </inputImages>

      <dataFiles>
        <dataFile path="assets/inputFor.pvl">
          <brief>
	    Input PVL file
          </brief>
          <description>
	    This is the PVL file that defines how the program is to operate.
          </description>
          <parameterName>PVL</parameterName>
        </dataFile>
      </dataFiles>

      <outputImages>
        <image width="550" height="550" src="assets/images/forstner.jpg">
          <brief>
	  Output image after processing.
          </brief>
          <description>
            The interest cube image after processing. To view a Förstner image you MUST manually
            stretch the image. This image has been stretched from 0 to 1.67854e-27.  Keep in mind
            if you dont do this, the data in the cube will be valid, but will display all white in
            qview.
          </description>
          <thumbnail caption= "Cube full of interest values after processing."
                     src="assets/thumbs/forstner.jpg" width="200" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
    </example>

    <example>
      <brief>
        Using interestcube with gradient operator.
      </brief>
      <description>
        The use of Interst to ingest an ISIS cube and output a cube with interest values.
      </description>
      <terminalInterface>
        <commandLine>
	  from= ab102401.cub
          pvl= input.pvl
	  to= out.cub
        </commandLine>
        <description>
	  This example shows the use of interestcube to create an ISIS cube of interest
          values from a standard ISIS cube. This example will use a 3x3 boxcar using the
          Gradient Operator.
        </description>
      </terminalInterface>

      <guiInterfaces>
        <guiInterface>
          <image width="450" height="550" src="assets/images/InterestGUI.jpg">
            <brief>
	      Example GUI
            </brief>
            <description>
	      Screenshot of the GUI with parameters.
            </description>
            <thumbnail width="164" height="200" caption="Interest GUI"
                       src="assets/thumbs/InterestGUI.jpg" />
          </image>
        </guiInterface>
      </guiInterfaces>

      <inputImages>
          <image width="458" height="550" src="assets/images/ab102401.jpg">
          <brief>
	    Input ISIS cube
          </brief>
          <description>
	    The input cube that the Interest Operator is to run on.
          </description>
          <thumbnail caption= "This is the input ISIS cube."
                     src="assets/thumbs/ab102401.jpg" width="167" height="200"/>
          <parameterName>FROM</parameterName>
        </image>
      </inputImages>

      <dataFiles>
        <dataFile path="assets/inputGrad.pvl">
          <brief>
	    Input PVL file
          </brief>
          <description>
	    This is the PVL file that defines how the program is to operate.
          </description>
          <parameterName>PVL</parameterName>
        </dataFile>
      </dataFiles>

      <outputImages>
        <image width="458" height="550" src="assets/images/gradient.jpg">
          <brief>
	    Output image after processing.
          </brief>
          <description>
            The interest cube image after processing.
          </description>
          <thumbnail caption= "Cube full of interest values after processing."
          src="assets/thumbs/gradient.jpg" width="167" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
    </example>

    <example>
      <brief>
        Using interestcube with Moravec operator.
      </brief>
      <description>
        The use of Interst to ingest an ISIS cube and output a cube with interest values.
      </description>
      <terminalInterface>
        <commandLine>
	  from= ab102401.cub
          pvl= input.pvl
	  to= out.cub
        </commandLine>
        <description>
	  This example shows the use of interestcube to create an ISIS cube of interest
          values from a standard ISIS cube. This example will use a 3x3 boxcar using the
           Moravec Operator.
        </description>
      </terminalInterface>

      <guiInterfaces>
        <guiInterface>
          <image width="450" height="550" src="assets/images/InterestGUI.jpg">
            <brief>
	      Example GUI
            </brief>
            <description>
	      Screenshot of the GUI with parameters.
            </description>
            <thumbnail width="164" height="200" caption="Interest GUI"
             src="assets/thumbs/InterestGUI.jpg" />
          </image>
        </guiInterface>
      </guiInterfaces>

      <inputImages>
          <image width="458" height="550" src="assets/images/ab102401.jpg">
          <brief>
	    Input ISIS cube
          </brief>
          <description>
	    The input cube that the Interest Operator is to run on.
          </description>
          <thumbnail caption= "This is the input ISIS cube."
          src="assets/thumbs/ab102401.jpg" width="167" height="200"/>
          <parameterName>FROM</parameterName>
        </image>
      </inputImages>

      <dataFiles>
        <dataFile path="assets/inputMor.pvl">
          <brief>
	    Input PVL file
          </brief>
          <description>
	    This is the PVL file that defines how the program is to operate.
          </description>
          <parameterName>PVL</parameterName>
        </dataFile>
      </dataFiles>

      <outputImages>
        <image width="458" height="550" src="assets/images/moravec.jpg">
          <brief>
	    Output image after processing.
          </brief>
          <description>
            The interest cube image after processing.
          </description>
          <thumbnail caption= "Cube full of interest values after processing."
          src="assets/thumbs/moravec.jpg" width="167" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
    </example>

    <example>
      <brief>
        Using interestcube with Standard Deviation operator using a Small Boxcar (3x3).
      </brief>
      <description>
        The use of Interest to ingest an ISIS cube and output a cube with interest values.
      </description>
      <terminalInterface>
        <commandLine>
	  from= ab102401.cub
          pvl= input.pvl
	  to= out.cub
        </commandLine>
        <description>
	  This example shows the use of interestcube to create an ISIS cube of interest
          values from a standard ISIS cube. This example will use a 3x3 boxcar using the
          Standard Deviation Operator.
        </description>
      </terminalInterface>

      <guiInterfaces>
        <guiInterface>
          <image width="450" height="550" src="assets/images/InterestGUI.jpg">
            <brief>
	      Example GUI
            </brief>
            <description>
	      Screenshot of the GUI with parameters.
            </description>
            <thumbnail width="164" height="200" caption="Interest GUI"
             src="assets/thumbs/InterestGUI.jpg" />
          </image>
        </guiInterface>
      </guiInterfaces>

      <inputImages>
          <image width="458" height="550" src="assets/images/ab102401.jpg">
          <brief>
	    Input ISIS cube
          </brief>
          <description>
	    The input cube that the Interest Operator is to run on.
          </description>
          <thumbnail caption= "This is the input ISIS cube."
          src="assets/thumbs/ab102401.jpg" width="167" height="200"/>
          <parameterName>FROM</parameterName>
        </image>
      </inputImages>

      <dataFiles>
        <dataFile path="assets/inputStd.pvl">
          <brief>
	    Input PVL file
          </brief>
          <description>
	    This is the PVL file that defines how the program is to operate.
          </description>
          <parameterName>PVL</parameterName>
        </dataFile>
      </dataFiles>

      <outputImages>
        <image width="458" height="550" src="assets/images/stddev.jpg">
          <brief>
	    Output image after processing.
          </brief>
          <description>
            The interest cube image after processing.
          </description>
          <thumbnail caption= "Cube full of interest values after processing."
          src="assets/thumbs/stddev.jpg" width="167" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
    </example>

    <example>
      <brief>
        Using interestcube with Standard Deviation operator and a Large Boxcar (15x15).
      </brief>
      <description>
        The use of Interst to ingest an ISIS cube and output a cube with interest values. This
        uses StandardDeviationOperator and a large boxcar to show the blurring effect of using
        a larger boxcar.
      </description>
      <terminalInterface>
        <commandLine>
          from= ab102401.cub
          pvl= input.pvl
          to= out.cub
        </commandLine>
        <description>
          This example shows the use of interestcube to create an ISIS cube of
          interest values from a standard ISIS cube. This example will use a 15x15
          boxcar using the StandardDeviationOperator.
        </description>
      </terminalInterface>

      <guiInterfaces>
        <guiInterface>
          <image width="450" height="550" src="assets/images/InterestGUI.jpg">
            <brief>
              Example GUI
            </brief>
            <description>
              Screenshot of the GUI with parameters.
            </description>
            <thumbnail width="164" height="200" caption="Interest GUI"
             src="assets/thumbs/InterestGUI.jpg" />
          </image>
        </guiInterface>
      </guiInterfaces>

      <inputImages>
          <image width="458" height="550" src="assets/images/ab102401.jpg">
          <brief>
            Input ISIS cube
          </brief>
          <description>
            The input cube that the Interest Operator is to run on.
          </description>
          <thumbnail caption= "This is the input ISIS cube."
          src="assets/thumbs/ab102401.jpg" width="167" height="200"/>
          <parameterName>FROM</parameterName>
        </image>
      </inputImages>

      <dataFiles>
        <dataFile path="assets/inputLarge.pvl">
          <brief>
            Input PVL file
          </brief>
          <description>
            This is the PVL file that defines how the program is to operate.
          </description>
          <parameterName>PVL</parameterName>
        </dataFile>
      </dataFiles>

      <outputImages>
        <image width="458" height="550" src="assets/images/large.jpg">
          <brief>
            Output image after processing.
          </brief>
          <description>
            The interest cube image after processing. You can see how the interest
            areas are slightly blured due to the large boxcar size.
          </description>
          <thumbnail caption= "Cube full of interest values after processing."
          src="assets/thumbs/large.jpg" width="167" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
    </example>

  </examples>
</application>
