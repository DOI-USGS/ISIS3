<?xml version="1.0" encoding="UTF-8"?>
<application name="footprintinit" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://isis.astrogeology.usgs.gov/Schemas/Application/application.xsd">

  <brief>
    Creates a lat/lon polygon and writes it to the image
  </brief>

  <description>
    <p>
      This applications creates a geometric polygon ("footprint") of the input
      image, where each vertex is a latitude/longitude coordinate in the image.
      Depending on the granularity of the search (SINC/LINC, NUMVERTICES), this
      polygon can represent anything from a rough approximation to a
      fine-grained model of the latitude/longitude extents of the image.
    </p>

    <p>
      These polygons are used in a variety of ISIS applications, primarily for
      performing fast intersection tests to determine if a given coordinate or
      line falls within the bounds of an image in latitude/longitude space.
    </p>

    <p>
      Because many applications can see performance gains on the order of
      magnitudes from using polygons over repeatedly creating cameras, it is
      highly recommended that this application be run on all images in a control
      network prior to performing network population.  The application
      "autoseed" requires the presence to these polygons, while "cnetadd" has a
      significant optimization in place using polygons.
    </p>
    <p>
      The application "spiceinit"
      must be run prior to running this application.
    </p>
  </description>

  <category>
    <categoryItem>Control Networks</categoryItem>
  </category>

  <seeAlso>
      <applications>
        <item>autoseed</item>
        <item>cnetadd</item>
      </applications>
  </seeAlso>

  <history>
    <change name="Tracie Sucharski" date="2005-07-19">
      Original version
    </change>
    <change name="Jacob Danton" date="2006-02-10">
      Changed input from a list of cube files to a single cube and added appTest.
    </change>
    <change name="Brendan George" date="2006-06-30">
      Fixed application test
    </change>
    <change name="Brendan George" date="2006-09-19">
      Added call to propagate and modify the history blob
    </change>
    <change name="Tracie Sucharski" date="2007-05-09">
      Added error check to insure spiceinit has been run.
    </change>
    <change name="Brendan George" date="2007-05-21">
      Moved from Geometry category to Control Network category
    </change>
    <change name="Steven Lambright" date="2007-07-26">
      Moved Control Network category to Control Networks Category (Control Network category is invalid) and updated program description.
    </change>
    <change name="Steven Koechle" date="2007-10-19">
      Changed name from polyinit to footprint init
    </change>
    <change name="Steven Koechle" date="2008-08-19">
      Updated to work with Geos3.0.0
    </change>
    <change name="Steven Koechle" date="2008-12-15">
      Deletes old footprint (generated off cubes serial number) if its found.
      New name for blob is just Footprint.
    </change>
    <change name="Steven Koechle" date="2009-04-17">
      PIXINC parameter was removed, ImagePolygon now uses a new method of
      finding footprints
    </change>
    <change name="Steven Lambright" date="2009-05-29">
      PIXINC re-implemented. This functionality is crucial. Existing polygons will no
      longer be deleted if this program fails.
    </change>
    <change name="Christopher Austin" date="2009-06-16">
      Changed default PIXINC to 100, added test cases.
    </change>
    <change name="Christopher Austin" date="2009-06-18">
      Added the cross test.
    </change>
    <change name="Christopher Austin" date="2009-07-01">
      Added EMISSION and INCIDENCE
    </change>
    <change name="Christopher Austin" date="2009-07-09">
      Changed param EMISSION to MAXEMISSION, and INCIDENCE to MAXINCIDENCE.
    </change>
    <change name="Christopher Austin" date="2009-07-21">
      Added LIMBTEST parameter, and fixed multiple tests, including multiple
      PIXINC coverage.
    </change>
    <change name="Christopher Austin" date="2009-07-28">
      Replaced PIXINC with SAMPINC and LINEINC.
    </change>
    <change name="Christopher Austin" date="2009-08-05">
      Changed the maximum value of MAXEMISSION and MAXINCIDENCE to 180.
      Added TESTXY and an app test for it.
    </change>
    <change name="Christopher Austin" date="2009-08-20">
      Changed SAMPINC and LINEINC to SINC and LINC for consistancy with
      camstats.
    </change>
    <change name="Christopher Austin" date="2010-02-17">
      Added the INCREASEPRECISION parameter.
    </change>
    <change name="Christopher Austin" date="2010-03-08">
      Added a results group when using INCREASEPRECISION which privides the
      final SINC and LINC used for the footprint.
    </change>
    <change name="Christopher Austin" date="2010-05-18">
      Prevented an infinite loop caused by Naif error handling.
    </change>
    <change name="Christopher Austin" date="2010-07-13">
      Fixed error reporting.
    </change>
    <change name="Christopher Austin" date="2011-04-12">
      Added the INCTYPE parameter (so it is consistant with caminfo).
    </change>
    <change name="Christopher Austin" date="2011-05-12">
      Added smarts to the VERTICES option.
    </change>
    <change name="Travis Addair, Bob Sucharski, Trent Hare" date="2011-10-07">
      Overhauled documentation.
    </change>
    <change name="Tracie Sucharski" date="2012-05-03">
      Added comment to documenation indicating spiceinit must be run prior to this
      application.
    </change>
    <change name="Steven Lambright" date="2012-05-14">
      The automatically calculated linc/sinc will now always be >= 1. References #686.
    </change>
    <change name="Debbie A. Cook" date="2012-12-10">
      Changed to use TProjection instead of Projection.  References #775
    </change>
    <change name="Janet Barrett" date="2014-08-04">
      Modified so that the program can be run on a mosaic file. Fixes #2158.
    </change>
    <change name="Jeannie Backer" date="2014-08-22">
      Updated pushframe truth data due to modification of THEMIS VIS distortion model. References #1659.
    </change>
    <change name="Jeannie Backer" date="2016-04-22">
      Modified code to get TargetRadii using the cube label and mapping group rather than just the TargetName.
      References #3892
    </change>
    <change name="christopher Combs" date="2017-06-01">
      Removed terminal output from poleMultiBoundary apptest. Fixes #4548.
    </change>
  </history>

  <groups>

    <group name="Files">

      <parameter name="FROM">
        <type>cube</type>
        <fileMode>input</fileMode>
        <brief>
          Input cube
        </brief>
        <description>
          The cube to initialize polygons.
        </description>
        <filter>
          *.cub
        </filter>
      </parameter>

    </group>

    <group name="Options">

      <parameter name="INCREASEPRECISION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Allow automatic adjustments to fix invalid polygons</brief>
        <description>
          Enabeling this option will allow the automatic reduction of the SINC
          and LINC parameters whenever their current values result in an
          invalid polygon. In addition, a results group will be created with
          the keywords SINC/LINC which reveal what SINC/LINC values were
          actually used for the creation of the footprint.

          NOTE: This parameter can result in a drastic increase in running time
          as well as a change to user input values.
        </description>
      </parameter>

      <parameter name="INCTYPE">
        <type>string</type>
        <default><item>LINCSINC</item></default>
        <brief>
          Polygon quality
        </brief>
        <description>
          When true, use NUMVERTICES to set an approximate number of steps for
          the footprint. Otherwise use POLYLINC and POLYSINC to create the
          polygon based on the dimentions of the cube.
        </description>
        <list>
          <option value="LINCSINC">
            <brief>
              Use POLYLINC and POLYSINC for polygon quality
            </brief>
            <description>
              Enable this option to use the number of samples and lines to skip
              around the perimeter of the image to compute the polygon
              footprint.
            </description>
            <exclusions>
              <item>NUMVERTICES</item>
            </exclusions>
          </option>
          <option value="VERTICES">
            <brief>
              Use NUMVERTICES for polygon quality
            </brief>
            <description>
              Enable this option to use a total number of vertices around the
              perimeter of the image to compute the polygon footprint.
            </description>
            <exclusions>
              <item>LINC</item>
              <item>SINC</item>
            </exclusions>
          </option>
        </list>
      </parameter>

      <parameter name="LINC">
        <type>integer</type>
        <minimum inclusive="yes">1</minimum>
        <default><item>100</item></default>
        <brief>
          The accuracy of the footprint in the line direction (larger is less
          accurate)
        </brief>
        <description>
          This is approximately how many lines in the input image
          to skip for every point stored in the footprint.
        </description>
      </parameter>

      <parameter name="SINC">
        <type>integer</type>
        <minimum inclusive="yes">1</minimum>
        <default><item>100</item></default>
        <brief>
          The accuracy of the footprint in the sample direction (larger is less
          accurate)
        </brief>
        <description>
          This is approximately how many samples in the input image
          to skip for every point stored in the footprint.
        </description>
      </parameter>

      <parameter name="NUMVERTICES">
        <type>integer</type>
        <default><item>40</item></default>
        <brief>
          Polygon steps
        </brief>
        <description>
          Specifies the approximate number of vertices (+/- 3) to take around
          the image to compute the polygon footprint. (In limb images, the
          number of steps can be much more or less than 3 off.) Note that
          currently, an increment of 4 or less will not work for pushframe
          instruments such as THEMIS-VIS.
        </description>
        <minimum inclusive="true">4</minimum>
      </parameter>

      <parameter name="MAXEMISSION">
        <type>double</type>
        <minimum inclusive="yes">0.0</minimum>
        <maximum inclusive="yes">180.0</maximum>
        <internalDefault>Ignore Emission</internalDefault>
        <brief>
          The maximum valid emission angle
        </brief>
        <description>
          When this value is provided, footprintinit will only consider points
          with an emission angle less than or equal to the provided value.

          There should never be an emission angle above 90.  However,
          planet features can cause abnormalities.
        </description>
      </parameter>

      <parameter name="MAXINCIDENCE">
        <type>double</type>
        <minimum inclusive="yes">0.0</minimum>
        <maximum inclusive="yes">180.0</maximum>
        <internalDefault>Ignore Incidence</internalDefault>
        <brief>
          The maximum valid incidence angle
        </brief>
        <description>
          When this value is provided, footprintinit will only consider points
          with an incidence angle less than or equal to the provided value.

          There should never be an incidence angle above 90. However,
          planet features can cause abnormalities.
        </description>
      </parameter>

    </group>

    <group name="Limb Test">

      <parameter name="LIMBTEST">
        <type>string</type>
        <default><item>ELLIPSOID</item></default>
        <brief>Defines how limb images are to be handled</brief>
        <description>
          This parameter is used to specify how limb images are to be handled.
        </description>
        <list>
          <option value="ELLIPSOID">
            <brief>Use an Ellipsoid Shape Model</brief>
            <description>
              If a limb image is detected, an ellipsoid shape model will be
              used reguardless of the shape model defined by spiceinit.
            </description>
          </option>
          <option value="SPICEINIT">
            <brief>Use Spiceinit Shape Model</brief>
            <description>
              If a limb image is detected then use the shape model defined
              by spiceinit. This is
            </description>
          </option>
        </list>
      </parameter>

    </group>

    <group name="XY Test">

      <parameter name="TESTXY">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Tests the footprint's XY projection</brief>
        <description>
          Tests the ability to project the footprint from lat/lon to x/y
          coordinates. If the test fails, an error will be thrown, and the
          lat/lon footprint will not be written to the input cube.
        </description>
        <inclusions>
          <item>MAP</item>
        </inclusions>
      </parameter>
      <parameter name="MAP">
        <type>filename</type>
        <fileMode>input</fileMode>
        <brief>
          File containing mapping parameters
        </brief>
        <defaultPath>$ISISROOT/appdata/templates/maps</defaultPath>
        <default><item>$ISISROOT/appdata/templates/maps/sinusoidal.map</item></default>
        <description>
          A file containing the desired XY mapping parameters.  This
          file can be a simple label file, hand produced or created via
          the "maptemplate" program.  It can also be an existing cube label
          which contains a Mapping group.  In the later case the input cube
          will be transformed into the same map projection, resolution, etc.
        </description>
        <helpers>
          <helper name="H1">
            <function>PrintMap</function>
            <brief>View MapFile</brief>
            <description>
              This helper button will cat out the mapping group of the given mapfile to the session log
              of the application
            </description>
            <icon>$ISISROOT/appdata/images/icons/labels.png</icon>
          </helper>
        </helpers>
        <filter>
          *.map *.cub
        </filter>
      </parameter>

    </group>

  </groups>

</application>
