<?xml version="1.0" encoding="UTF-8"?>

<application name="cam2map" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://isis.astrogeology.usgs.gov/Schemas/Application/application.xsd">

  <brief>
    Convert camera image to a map projection
  </brief>

  <description>
    This program projects an ISIS <def link="Level0">level0</def> or <def link="Level1">level1</def>
    <def link="Cube">cube</def> to a <def link="MAP">map</def> (ISIS <def link="Level2">level2</def> cube).
    The input cube requires <def>SPICE</def> data and therefore <i>spiceinit</i> should be executed prior to
    running <i>cam2map</i>.  The <def link="Map Projection">map projection</def> is defined using a
    <def>PVL</def> file which is specified in <i>cam2map</i> in the MAP parameter.  Note: the system defaults
      to the Sinusoidal projection (ISIS projection based templates are located in $ISISROOT/appdata/templates/maps).
    To learn more about using map projections in ISIS, refer to the ISIS Workshop
    <a href="https://isis.astrogeology.usgs.gov/fixit/projects/isis/wiki/Learning_About_Map_Projections">
    "Learning About Map Projections"</a>.

    <p>
      If you only entered the input cube (FROM) and output cube (TO) and changed no other parameters, the following
      are the defaults for the Mapping group. Note: this is the PVL format you'll see in both the level2 ISIS cube header
      and the MAP file:
    </p>
    <pre>
  Group = Mapping
    TargetName             = "Obtained from the Instrument group"
    EquatorialRadius       = "Obtained from TargetAttitudeShape kernel"
    PolarRadius            = "Obtained from TargetAttitudeShape kernel"

    LatitudeType           = Planetocentric
    LongitudeDirection     = PositiveEast
    LongitudeDomain        = 360 (Could be automatically adjusted to 180 by LONSEAM)

    MinimumLatitude        = "Computed from the input camera cube"
    MaximumLatitude        = "Computed from the input camera cube"
    MinimumLongitude       = "Computed from the input camera cube"
    MaximumLongitude       = "Computed from the input camera cube"

    ProjectionName         = Sinusoidal
    CenterLongitude        = "Average of MinimumLongitude and MaximumLongitude"
    PixelResolution        = "Computed from the input camera cube"
  EndGroup
    </pre>

    <p>If you need to generate your own map file you can use the <i>maptemplate</i> program, or alternatively,
    hand create a file using any text editor. The file need only specify the ProjectionName, as defaults will be
    computed for the remaining map file parameters.  The following table indicates how the defaults are
    established:
    </p>

    <table border="1">
      <tr>
        <td>PARAMETER</td>
        <td>DEFAULT</td>
      </tr>

      <tr>
        <td>TargetName</td>
        <td>Read from Instrument group in the input cube labels</td>
      </tr>

      <tr>
        <td>Equatorial<def>Radius</def><br />PolarRadius</td>
        <td>Read from SPICE PCK file set during <i>spiceinit</i>.  The PCK file is defined in the Kernels
        group via the TargetAttitudeShape keyword</td>
      </tr>

      <tr>
        <td><def link="Latitude Type">LatitudeType</def></td>
        <td><def link="Planetocentric Latitude">Planetocentric</def></td>
      </tr>

      <tr>
        <td><def link="Longitude Direction">LongitudeDirection</def></td>
        <td><def link="Positive East Longitude">PositiveEast</def></td>
      </tr>

      <tr>
        <td><def link="Longitude Domain">LongitudeDomain</def></td>
        <td>Normally 360 (0-360).  However, if the 180 (-180,180) domain definition creates a smaller projected
        cube, then use it instead.</td>
      </tr>

      <tr>
        <td>Minimum<def>Latitude</def><br />MaximumLatitude<br />Minimum<def>Longitude</def><br />MaximumLongitude</td>
        <td>Computed from the input cube or read from the map file.   However, any combination of the
        four values can then be overridden by the user.  The values the user specifies are expected
        to be in the coordinate system of the projection.</td>
      </tr>

      <tr>
        <td><def>PixelResolution</def><br /><def>Scale</def></td>
        <td>Computed from the input cube or read from the map file.  The value can be overridden by the user.</td>
      </tr>

    </table>

   <p>Alternatively, the map file can be an existing map projected (level2) cube.  A level2 cube has PVL labels
   and contains the Mapping group.  Depending on the values of the input parameters, the output cube can
   use some or all of the keyword values of the map file.  For instance, setting MATCHMAP=yes causes all
   of the mapping parameters to come from the map file, resulting in an output cube having the same
   number of <def link="Line">lines</def> and <def link="Sample">samples</def> as the map file.
   If MATCHMAP=yes and the map file is missing a keyword like PixelResolution, the application will fail with
   a PVL error.  Setting MATCHMAP=no allows for some of the mapping components to be overridden by
   the user or computed from the FROM cube.
   </p>

   <p>If you are attempting to construct a mosaic, it is <b>essential</b> that the PixelResolution, EquatorialRadius,
   PolarRadius, LatitudeType, LongitudeDirection, LongitudeDomain, ProjectionName, and projection specific
   parameters (e.g., CenterLongitude, CenterLatitude) are the same for all cubes.  That is, you should create
   one map file and use it as input for all the cubes in your mosaic.  Otherwise, the program will throw and error.
   </p>

   <p>By letting the minimum and maximum latitude and longitude values default, the application will determine
   the coverage of each image. However, if the mosaic Latitude and Longitude range are entered, each output
   image will be projected to the full size of the mosaic resulting in large file sizes and images with many
   <def>NULL</def> pixels. The following Mapping group could be used for mosaicking:
   </p>
   <pre>
 Group = Mapping
   ProjectionName         = Sinusoidal
   CenterLongitude        = 0
   PixelResolution        = 100 &lt;meters&gt;
 EndGroup
   </pre>
   <p>
     Finally, depending on the projection, problems can occur with cubes that fall on the projection
     longitude seam.  For example, if you are making a mosaic with LongitudeDomain=360 and your
     cube crosses 0/360 seam, the program will compute the default longitude range of the cube to
     MinimumLongitude=0 and MaximumLongitude=360.  A larger than necessary output image will be
     created, with size inversely proportional to pixel resolution.  The LONSEAM parameter allows you
     to selectively handle this case. If you are making mosaics near the seam you will need to understand
     and alter the default for this parameter. <a href="https://isis.astrogeology.usgs.gov/fixit/projects/isis/wiki/Learning_About_Map_Projections#Problems-at-the-Longitude-Seams">
     Section 14 </a>of The ISIS Workshop "Learning About Map Projections" includes an example to help
     illustrate the problem.
   </p>
  </description>

  <category>
    <categoryItem>Map Projection</categoryItem>
    <categoryItem>Cameras</categoryItem>
  </category>

  <history>
    <change name="Kay Edwards" date="1986-09-02">
      Original version
    </change>
    <change name="Jeff Anderson" date="2003-05-02">
      Converted to Isis 3.0
    </change>
    <change name="Jeff Anderson" date="2003-06-05">
      Added to Camera category
    </change>
    <change name="Stuart Sides" date="2003-07-29">
      Modified filename parameters to be cube parameters where necessary
    </change>
    <change name="Jeff Anderson" date="2003-12-01">
      Reworked defaults for user parameters
    </change>
    <change name="Jeff Anderson" date="2004-01-21">
      Modified resolution parameters to eliminate inclusion/exclusion
      dependences.
    </change>
    <change name="Jeff Anderson" date="2004-02-13">
      Added AUTOLON parameter
    </change>
    <change name="Jeff Anderson" date="2004-02-25">
      Fixed bug with ground range user option
    </change>
    <change name="Elizabeth Miller" date="2005-10-25">
        Added appTest
    </change>
    <change name="Jacob Danton" date="2005-12-02">
        Updated appTest
    </change>
     <change name="Elizabeth Miller" date="2006-03-23">
       Fixed appTest to reflect changes made in all camera models
     </change>
     <change name="Tracie Sucharski" date="2006-04-04">
        Check to see if center of input image projects, if it does, force the  tile containing center
        to be processed in ProcessRubberSheet.
     </change>
     <change name="Jeff Anderson" date="2006-04-04">
       Reworked user interface
     </change>
     <change name="Elizabeth Miller" date="2006-04-10">
       Reworked code for new user interface and added helper buttons
     </change>
     <change name="Elizabeth Miller" date="2006-05-18">
       Depricated CubeProjection and ProjectionManager to ProjectionFactory
     </change>
     <change name="Elizabeth Miller" date="2006-05-30">
       Moved Helper buttons and fixed error checking in helper methods
     </change>
     <change name="Elizabeth Miller" date="2006-09-06">
       Modified call to ProjectionFactory CreateForCube method to include a value of false
       for the newly added sizeMatch parameter
     </change>
     <change name="Jeff Anderson" date="2006-12-06">
       Test to see if target is sky and abort
     </change>
     <change name="Jeff Anderson" date="2007-03-13">
       Add minimize option for DEFAULTRANGE
     </change>
     <change name="Steven Lambright" date="2007-06-22">
       Fixed typo and corrected XML
     </change>
     <change name="Steven Lambright" date="2007-08-22">
       Fixed lonseam option to work with minimize option correctly
     </change>
     <change name="Stuart Sides" date="2008-02-11">
       Fixed bug where the ground range was not pulled from the map file when
       it was supposed to be (using DEFAULTRANGE = MAP).
     </change>
     <change name="Christopher Austin" date="2008-04-18">
       Added the MATCHMAP option.
     </change>
     <change name="Steven Lambright" date="2008-05-12">
       Removed references to CubeInfo
     </change>
     <change name="Christopher Austin" date="2008-07-15">
       Changed MATCHMAP to default off
     </change>
     <change name="Steven Lambright" date="2008-08-04">
       Changed MATCHMAP to have exclusions. If MATCHMAP is true, the PIXRES and DEFAULTRANGE
       options can not be set. Changed the code to enforce MATCHMAP.
     </change>
     <change name="Steven Lambright" date="2008-09-10">
       Added the ability to change ProcessRubberSheet's tiling sizes. Now the Camera will decide upon the
       tiling sizes used in ProcessRubberSheet, in order to fix problems found with the push frame cameras which
       have small framelet sizes (less than 64 pixels tall). This is a passive ability with respect to the user;
       no options or differences should be noticeable.
     </change>
     <change name="Christopher Austin" date="2008-10-31">
      Fixed DEFAULTRANGE > CAMERA option to accept MINLAT, MAXLAT, MINLON, and MAXLON
      as overriding values.
     </change>
     <change name="Christopher Austin" date="2009-01-27">
       Fixed parameter names.
     </change>
     <change name="Travis Addair" date="2009-08-10">
       Mapping group parameters are now placed into the print file.
     </change>
     <change name="Steven Lambright" date="2011-01-31">
       Improved documentation
     </change>
     <change name="Jai Rideout" date="2011-02-10">
       Print file now includes PixelResolution, Scale, UpperLeftCornerX, and UpperLeftCornerY in Mapping group.
     </change>
     <change name="Lynn Weller and Debbie A. Cook" date="2012-01-17">
       Updated documentation text, added glossary links, and improved compatibility with Isis documentation.
     </change>
     <change name="Jeff Anderson" date="2012-04-30">
       Add forward and reverse patch rubbersheeting parameters.
     </change>
     <change name="Debbie A. Cook" date="2012-07-06">
       Updated Spice members to be more compliant with Isis coding standards. References #972.
     </change>
     <change name="Debbie A. Cook" date="2012-10-11">
       Updated to use new Target class. References Mantis ticket number #775 and #1114.
     </change>
     <change name="Tracie Sucharski" date="2012-12-06">
       Changed to use TProjection instead of Projection.  References #775
     </change>
     <change name="Kimbelry Oyama" date="2013-07-11">
       Removed redundant checks for !ui.GetBoolean("MATCHMAP") from if statements. Added
       ui.WasEntered before some of the parameters are used. Disabled LONSEAM when MATCHMAP
       is selected. Fixes #1613.
     </change>
     <change name="Jac Shinaman" date="2016-01-29">
        Added new examples #5-8 describing the TRIM parameter. Fixes #0272.
     </change>
     <change name="Jac Shinaman" date="2016-02-09">
        Updated examples #1-4 GUI illustrations, and clarified some of the "Description" paragraphs.
        Fixes #2389.
     </change>
     <change name="Jac Shinaman" date="2016-02-09">
        Brought code closer to ISIS coding standards. Added test to read NAIF body frame info from labels.
        References #3934
     </change>
     <change name="Curtis Rose" date="2016-06-29">
        Fixed an error when matchmap was true, the user could attempt to add a mapping file
	with a targetname that did not match the targetname of the instrument group of
	the cube file. Fixes #1952.
     </change>
     <change name="Adam Paquette" date="2020-03-02">
        Added one last setImage call to check for pixel occlusion. Where any
        pixel is occluded when the resulting latitude, or longitude differ from
        the original latitude or longitude by 0.000001 degrees.
     </change>
     <change name="Austin Sanders" date="2020-03-02">
        Added an additional parameter (occlusion) to toggle occlusion processing.
     </change>
  </history>

  <oldName>
    <item>lev1tolev2</item>
    <item>plansinu</item>
    <item>planorth</item>
  </oldName>

  <groups>
    <group name="Files">
      <parameter name="FROM">
        <type>cube</type>
        <fileMode>input</fileMode>
        <brief>
          Input cube to project
        </brief>
        <description>
          The specification of the input cube to be projected.  The cube must
          have been initialized using the <i>spiceinit</i> program.
        </description>
        <filter>
          *.cub
        </filter>
      </parameter>

      <parameter name="MAP">
        <type>filename</type>
        <fileMode>input</fileMode>
        <brief>
          File containing mapping parameters
        </brief>
        <defaultPath>$ISISROOT/appdata/templates/maps</defaultPath>
        <default><item>$ISISROOT/appdata/templates/maps/sinusoidal.map</item></default>
        <description>
          A file containing the desired output mapping parameters in PVL format. This
          file can be a simple label file, or can be hand produced, or created via
          the <i>maptemplate</i> program.  It can also be an existing cube or cube label
          which contains a Mapping group.  In the latter case, the FROM cube
          will be transformed into the same map projection, resolution, etc.
        </description>
        <helpers>
          <helper name="H1">
            <function>PrintMap</function>
            <brief>View MapFile</brief>
            <description>
              This helper button will cat out the mapping group of the given mapfile to the session log
               of the application
             </description>
	     <icon>$ISISROOT/appdata/images/icons/labels.png</icon>
          </helper>
        </helpers>
        <filter>
          *.map *.cub
        </filter>
      </parameter>

      <parameter name="TO">
        <type>cube</type>
        <fileMode>output</fileMode>
        <brief>
          Newly mapped cube
        </brief>
        <description>
          This file is the map projected (level2) image.
        </description>
        <filter>
          *.cub
        </filter>
      </parameter>
      <parameter name="MATCHMAP">
        <type>boolean</type>
        <default><item>false</item></default>
        <brief>Match the map file</brief>
        <description>
	  This forces all of the mapping parameters to come from the
	  map file.  Additionally, when the map file is an image the TO file will have the
	  same number of lines and samples as the map file.
        </description>
        <exclusions>
          <item>PIXRES</item>
          <item>RESOLUTION</item>
          <item>DEFAULTRANGE</item>
          <item>MINLAT</item>
          <item>MAXLAT</item>
          <item>MINLON</item>
          <item>MAXLON</item>
          <item>LONSEAM</item>
        </exclusions>
      </parameter>
    </group>

    <group name="Output Map Resolution">
      <parameter name="PIXRES">
        <type>string</type>
        <brief>Defines how the pixel resolution in the output map file is obtained</brief>
        <default><item>CAMERA</item></default>
        <description>
          This parameter is used to specify how the pixel resolution is obtained for the output map
          projected cube.
        </description>
        <helpers>
          <helper name="H1">
            <function>LoadCameraRes</function>
            <brief>Load Camera Resolution </brief>
            <description>This helper button will load the default resolution from the camera</description>
	    <icon>$ISISROOT/appdata/images/icons/exec.png</icon>
          </helper>
          <helper name="H2">
            <function>LoadMapRes</function>
            <brief>Load Map File Resolution </brief>
            <description>This helper button will load the default resolution from the map file</description>
          </helper>
        </helpers>
        <list>
           <option value="CAMERA">
              <brief>Compute resolution from input cube</brief>
              <description>
                This option will automatically determine the resolution from the input cube specified using the FROM parameter.
              </description>
              <exclusions>
                <item>RESOLUTION</item>
              </exclusions>
            </option>

           <option value="MAP">
              <brief>Read resolution from input map file</brief>
              <description>
                This option will use either the PixelResolution (meters/pixel) or Scale (pixels/degree) in the map file.
              </description>
              <exclusions>
                <item>RESOLUTION</item>
              </exclusions>
            </option>

           <option value="MPP">
              <brief> Get resolution from user in meters per pixel</brief>
              <description>
                This option allows the user to specify the resolution in meters per pixel using the RESOLUTION parameter
              </description>
              <inclusions>
                <item>RESOLUTION</item>
              </inclusions>
            </option>

           <option value="PPD">
              <brief> Get resolution from user in pixels per degree</brief>
              <description>
                This option allows the user to specify the resolution in pixels per degree using the RESOLUTION parameter
              </description>
              <inclusions>
                <item>RESOLUTION</item>
              </inclusions>
            </option>
        </list>
      </parameter>

      <parameter name="RESOLUTION">
        <type>double</type>
        <brief>Pixel resolution</brief>
        <description>
          Specifies the resolution in either meters per pixel or pixels per degree
        </description>
        <minimum inclusive="no">0.0</minimum>
      </parameter>
    </group>

    <group name="Output Map Ground Range">
      <parameter name="DEFAULTRANGE">
        <type>string</type>
        <brief>Defines how the default ground range is determined</brief>
        <default><item>MINIMIZE</item></default>
        <description>
          This parameter is used to specify how the default latitude/longitude ground range for the output map projected image
          is obtained.  The ground range can be obtained from the camera or map file.  Note the user can override the default
          using the MINLAT, MAXLAT, MINLON, MAXLON parameters.  The purpose of the ground range is to define the coverage
          of the map projected image.  Essentially, the ground range and pixel resolution are used to compute the size
          (samples and line) of the output image.
        </description>

        <helpers>
          <helper name="H1">
            <function>LoadCameraRange</function>
            <brief>Load Camera Ground Range </brief>
            <description>This helper button will load the default ground range from the camera</description>
	    <icon>$ISISROOT/appdata/images/icons/exec.png</icon>
          </helper>
          <helper name="H2">
            <function>LoadMapRange</function>
            <brief>Load Map File Ground Range </brief>
            <description>This helper button will load the default ground range from the map file</description>
          </helper>
        </helpers>

        <list>
          <option value="MINIMIZE">
             <brief>Minimize output image size</brief>
             <description>
               This option will use the camera and projection in combination to ensure the output image size
               (samples, lines) is minimized.  Using a ground range can cause NULL padding for projections with
               curved meridians and/or parallels and hence large output images.  The amount of padding can be
               quite large for extremely high resolution maps.
             </description>
             <inclusions><item>LONSEAM</item></inclusions>
             <exclusions>
               <item>MINLAT</item>
               <item>MAXLAT</item>
               <item>MINLON</item>
               <item>MAXLON</item>
               <item>TRIM</item>
             </exclusions>
           </option>

           <option value="CAMERA">
              <brief> Compute default range from input cube</brief>
              <description>
                This option will automatically determine the minimum/maximum latitude/longitude from the input
                camera model cube specified using the FROM parameter.
              </description>
              <inclusions><item>LONSEAM</item></inclusions>
            </option>

           <option value="MAP">
              <brief> Read default range from map file</brief>
              <description>
                This option will read the minimum/maximum latitude/longitude from the input map file.
                All four values are expected to be defined.
              </description>
              <exclusions><item>LONSEAM</item></exclusions>
            </option>
        </list>
      </parameter>

      <parameter name="MINLAT">
        <type>double</type>
        <brief>Minimum Latitude</brief>
        <internalDefault>Use default range</internalDefault>
        <description>
          The minimum latitude of the output map.   If this is entered by the user it will override
          the default camera or map value.  By default, planetocentric latitudes are assumed unless
          the map file specifies otherwise.
        </description>

        <minimum inclusive="yes">-90.0</minimum>
        <maximum inclusive="yes">90.0</maximum>
      </parameter>

      <parameter name="MAXLAT">
        <type>double</type>
        <brief>Maximum Latitude</brief>
        <internalDefault>Use default range</internalDefault>
        <description>
          The maximum latitude of the output map.   If this is entered by the user it will override
          the default camera or map value.  By default, planetocentric latitudes are assumed unless
          the map file specifies otherwise.
        </description>
        <minimum inclusive="yes">-90.0</minimum>
        <maximum inclusive="yes">90.0</maximum>
        <greaterThan><item>MINLAT</item></greaterThan>
      </parameter>

      <parameter name="MINLON">
        <type>double</type>
        <brief>Minimum Longitude</brief>
        <internalDefault>Use default range</internalDefault>
        <description>
          The minimum longitude of the output map.   If this is entered by the user it will override
          the default camera or map value.  By default, positive east longitudes in the range of 0 to
          360 are assumed unless the map file specifies otherwise.
        </description>
      </parameter>

      <parameter name="MAXLON">
        <type>double</type>
        <brief>Maximum Longitude</brief>
        <internalDefault>Use default range</internalDefault>
        <description>
          The maximum longitude of the output map.   If this is entered by the user it will override the
          default camera or map value.  By default, positive east longitudes in the range of 0 to 360
          are assumed unless the map file specifies otherwise.
        </description>
        <greaterThan><item>MINLON</item></greaterThan>
      </parameter>

      <parameter name="TRIM">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>
          Set all pixels outside the bounding box to NULL
        </brief>
        <description>
          The image is modified. The pixel dimensions of the file are retained; therefore, the number
          of pixels is the same. However, the pixels that fall outside the default or specified latitude
          and longitude range are set to NULL.
          <br></br>
          <br></br>
          If camera is selected:
          <ul>
            <li>You can opt to trim or not trim</li>
            <li>You can trim by entering the lat/lon range</li>
            <li>You cannot use the minimize parameter</li>
          </ul>
          If map is selected:
          <ul>
            <li>You can opt to trim or not trim</li>
            <li>You can trim by entering lat/lon range</li>
            <li>You cannot use the lonseam parameter</li>
            <li>You cannot use the minimize parameter</li>
          </ul>
        </description>
      </parameter>
    </group>

    <group name="Longitude Seam Options">
      <parameter name="LONSEAM">
        <type>string</type>
        <default><item>AUTO</item></default>
        <brief>
          How should images at the longitude seam be handled
        </brief>
        <description>
          With this option you can turn on/off the automatic longitude domain switching that occurs
          when a file crosses the boundary of the longitude domain (0-360 or -180 to 180).  If
          the switching is turn off then you have the choice of making the program continue or
          exit when the cube does cross the boundary.
        </description>

        <list>
           <option value="AUTO">
              <brief>Automatically correct Longitude Domain</brief>
              <description>
                If the cube crosses the longitude seam automatically compute the LongitudeDomain.
                When the cube is near 0 or 360 degrees the program will assume 180 LongitudeDomain.
                When the cube is near 180 or -180 degrees it will assume 360 LongitudeDomain.
              </description>
            </option>

           <option value="ERROR">
              <brief>Abort program if cube crosses seam</brief>
              <description>
                If the cube crosses the longitude seam the program will exit with an error message
              </description>
            </option>

            <option value="CONTINUE">
               <brief>Continue program if cube crosses seam</brief>
               <description>
                 If the cube crosses the longitude seam the program will continue.  The LongitudeDomain
                 in the map file will be used.  If the map file does not have a LongitudeDomain, 0-360
                 will be used. Note that this could create an extremely large image.
               </description>
             </option>
        </list>

      </parameter>
    </group>

    <group name="Options">
      <parameter name="INTERP">
        <type>string</type>
        <default>
          <item>CUBICCONVOLUTION</item>
        </default>
        <brief>Type of interpolation</brief>
        <description>
          This is the type of interpolation to be performed on the input.
        </description>
        <list>
          <option value="NEARESTNEIGHBOR">
            <brief>Nearest Neighbor</brief>
            <description>
              Each output pixel will be set to the pixel nearest the
              calculated input pixel.
            </description>
          </option>
          <option value="BILINEAR">
            <brief>Bi-Linear interpolation</brief>
            <description>
              Each output pixel will be set to the value calculated by
              a bi-linear interpolation of the calculated input pixel.
            </description>
          </option>
          <option value="CUBICCONVOLUTION">
            <brief>Cubic Convolution interpolation</brief>
            <description>
              Each output pixel will be set to the value calculated by
              a cubic convolution interpolation of the calculated input pixel.
            </description>
          </option>
        </list>
      </parameter>

      <parameter name="WARPALGORITHM">
        <type>string</type>
        <default>
          <item>AUTOMATIC</item>
        </default>
        <brief>Warp algorithm</brief>
        <description>
          This parameter is used to choose the warping algorithm, either the forward patch algorithm or the
          reverse patch algorithm. The default is to automatically choose the algorithm based on the input
          camera type (e.g., framing, linescan, pushframe).
        </description>
        <list>
          <option value="FORWARDPATCH">
            <brief>Forward patch warp algorithm</brief>
            <description>
              Patches are uniformly distributed over the input cube (FROM).  For each input patch, the lat/lons
              of the four corners coordinates are computed using the camera model.
              Those four lat/lon coordinates are used by the
              map projection to determine four output pixel coordinates.   Then the
              four output to input image coordinates are fit with two affine transforms.
              That is, isamp=f(osamp,oline) and iline=g(osamp,oline)
              where f = A+B*osamp+C*oline and similarly for g.
              If the estimated input/sample
              line (as computed by the affine transform) at the center of the patch is within a tenth
              of a pixel of the actual computation using the projection and camera model,
              the affine transforms are used to place the calculated input pixels in the output patch
              (using the specified INTERPOLATOR).
            </description>
            <inclusions><item>PATCHSIZE</item></inclusions>
            <exclusions><item>OCCLUSION</item></exclusions>
          </option>
          <option value="REVERSEPATCH">
            <brief>Reverse patch warp algorithm</brief>
            <description>
              Patches are uniformly distributed over the output cube (map projected product).  For each
              output patch, the lat/lons of the four corners coordinates
              are computed using the map projection.  Those four lat/lon coordinates are used
              by the camera model to determine four input pixel coordinates.   Then the
              four output to input image coordinates are fit with two affine transforms.  That is,
              isamp=f(osamp,oline) and iline=g(osamp,oline) where f = A+B*osamp+C*oline and similarly for g.
              If the estimated input/sample
              line (as computed by the affine transform) at the center of the patch is within a
              tenth of a pixel of the actual computation using the projection and camera model,
              the affine transforms are used to place the calculated input pixels in the output patch
              (using the specified INTERPOLATOR).
            </description>
            <inclusions><item>PATCHSIZE</item></inclusions>
          </option>
          <option value="AUTOMATIC">
            <brief>Automatically select warp algorithm</brief>
            <description>
               The automatic option will choose the appropriate algorithm depending on the camera type
               of the input cube (TO).  If the cube is a framing camera image,
               the reverse algorithm will be used with a PATCHSIZE of 4.  If the cube is a line scan image,
               the forward algorithm will be used with a PATCHSIZE of 5.  If
               the cube is a push frame camera (e.g., LRO WAC, MRO MARCI, or THEMIS VIS)
               the forward transform with a PATCHSIZE of the pushframe framelet height will be used.
               It is recommended
               that you always use automatic for push frame cameras to ensure the patch size does not cross
               multiple framelets.
            </description>
            <exclusions><item>PATCHSIZE</item><item>OCCLUSION</item></exclusions>
          </option>
        </list>
      </parameter>

      <parameter name="PATCHSIZE">
        <type>integer</type>
        <brief>Patch size for forward or reverse warping</brief>
        <description>
          The forward and reverse patch algorithms try to fit an affine transform between the
          camera model coordinate and projection coordinate using the four corners of the patches.
          Patches that are too large may run faster at the risk of missing higher resolution information
          about the DTM. For example, a patch of 256x256 may have the same elevation at the four
          corners and center of the grid, but a crater may exist in one of the four quadrants of the patch.
          The crater, up to 128 pixels in diameter, may not be properly orthorectified.  In general, small
          patch sizes are recommended (e.g., 4, 8).
        </description>
        <minimum inclusive="yes">1</minimum>
      </parameter>

      <parameter name ="OCCLUSION">
        <type>boolean</type>
        <brief>Detect and mark occluded pixels.</brief>
        <description>
          This parameter is used to toggle the occlusion detection algorithm.
          If set true, then the occlusion detection algorithm locates and nullifies
          occluded pixels.  A pixel is determined to be occluded if the lat/lon
          value of the pixel in projected image space does not match (within a
          tolerance) the lat/lon value of the pixel in unprojected image space.
          <br></br>
          <br></br>
          Highly dependent on DEM / image pixel resolution and accuracy of
          coregistration between the two.
          <br></br>
          <br></br>
          This parameter also significantly increases projection time.  It is
          recommended that this option is only used on images with known areas
          of occlusion.
        </description>
        <default><item>false</item></default>
      </parameter>
    </group>
  </groups>

  <examples>
    <example>
      <brief> Demonstrates the AUTO LONSEAM option </brief>
       <description>
         This example is the first of two different runs of <i>cam2map</i>
         demonstrating the LONSEAM option.  In this case it is set to AUTO.
         All the user input parameters in this example are identical to the
         following example except for LONSEAM and TO.  The default for LONSEAM
         is AUTO.
       </description>
      <terminalInterface>
        <commandLine> from=EN0108830655M.cub map=../IN/sinu.map
                      to=EN0108830655M_sinu_auto.cub
        </commandLine>
        <description>
          This is the command line used to create the output for the AUTO
          version of the LONSEAM example.
        </description>
      </terminalInterface>
      <guiInterfaces>
        <guiInterface>
          <image src="assets/images/CAM2MAP_MATCHMAP_MAPFILE_GUI.jpeg" width="640" height="1060">
            <brief>
              Example GUI
            </brief>
            <description>
              The top of the GUI shows the parameters filled in for input
              files, output file, and output map resolution.
            <br></br>
            <br></br>
              The middle of the GUI illustrates the parameters filled in for the
              output map ground range and the longitude seam options.  Under
              the output map ground range section, notice the grayed out
              parameters.  These values are computed and not allowed to be
              modified when DEFAULTRANGE = MINIMIZE.  This is the default.
              The LONSEAM option has been set to AUTO in this example.
            <br></br>
            <br></br>
              The bottom of the GUI shows the Options menu.
              The default value for INTERP is selected (CUBICCONVOLUTION).
            </description>
            <thumbnail src="assets/thumbs/CAM2MAP_LONSEAM_AUTO_thumb.jpeg" width="200" height="500" caption="cam2map LONSEAM=AUTO GUI" />
          </image>
        </guiInterface>

      </guiInterfaces>
      <dataFiles>
        <dataFile path="assets/IN/sinu.map">
          <brief> Map file </brief>
          <description>
            Input map file defining the desired output map projection.  This
            file is in PVL format.
          </description>
          <parameterName> MAP </parameterName>
        </dataFile>
      </dataFiles>
      <inputImages>
        <image src="assets/images/FromFile_EN0108830655M.jpg" width="496" height="496">
          <brief> Input image for LONSEAM examples</brief>
          <description>
            This is a Messenger narrow angle camera image.
          </description>
          <thumbnail caption=" Input Messenger image" src="assets/thumbs/FromFile_EN0108830655M_thumb.jpg" width="200" height="200"/>
          <parameterName>FROM</parameterName>
        </image>
      </inputImages>
      <outputImages>
        <image src="assets/images/ToFile_EN0108830655M_lonseam_auto.jpg" width="496" height="496">
          <brief> Output image for cam2map LONSEAM=AUTO</brief>
          <description> This is the output of cam2map demonstrating LONSEAM set
                        to AUTO.  Contrast this output with the next example
                        which was created with the LONSEAM set to CONTINUE.
          </description>
          <thumbnail caption="Output of cam2map run with LONSEAM=AUTO" src="assets/thumbs/ToFile_EN0108830655M_lonseam_auto_thumb.jpg" width="200" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
    </example>

    <example>
      <brief> Demonstrates the LONSEAM CONTINUE option </brief>
       <description>
         This example is the second of two different runs of <i>cam2map</i>
         demonstrating the LONSEAM option.  In this case it is set to CONT.
         All the user input parameters in this example are identical to the
         previous example except for LONSEAM and TO.
       </description>
      <terminalInterface>
        <commandLine> from=EN0108830655M.cub
                      map=../IN/sinu.map
                      to=EN0108830655M_sinu_cont.cub lonseam=cont
        </commandLine>
        <description>
          This is the command line used to create the output for the CONT
          version of the LONSEAM example.
        </description>
      </terminalInterface>
      <guiInterfaces>
        <guiInterface>
          <image src="assets/images/CAM2MAP_LONSEAM_CONT_GUI.jpeg" width="640" height="1060">
            <brief>
              Example GUI
            </brief>
            <description>
              The top of the GUI shows parameters filled in for input
              files, output file, and output map resolution.
            <br></br>
            <br></br>
              The middle of the GUI illustrates parameters filled in for the
              output map ground range and the longitude seam options.  Under
              the output map ground range section, notice the grayed out
              parameters.  These values are computed and not allowed to be
              modified when DEFAULTRANGE = MINIMIZE.  This is the default.
              The LONSEAM option has been set to CONT in this example.
            <br></br>
            <br></br>
              The bottom of the GUI shows the Options menu.
              The default value for INTERP is selected (CUBICCONVOLUTION).
            </description>
            <thumbnail src="assets/thumbs/CAM2MAP_LONSEAM_CONT_thumb.jpeg/" width="200" height="500" caption="cam2map LONSEAM=CONTINUE GUI" />
          </image>
        </guiInterface>

      </guiInterfaces>
      <dataFiles>
        <dataFile path="assets/IN/sinu.map">
          <brief> Map file </brief>
          <description>
            Input map file defining the desired output map projection.  This
            file is in PVL format.
          </description>
          <parameterName> MAP </parameterName>
        </dataFile>
      </dataFiles>
      <inputImages>
        <image src="assets/images/FromFile_EN0108830655M.jpg" width="496" height="496">
          <brief> Input image for LONSEAM examples</brief>
          <description>
            This is a Messenger narrow angle camera image.
          </description>
          <thumbnail caption=" Input Messenger image" src="assets/thumbs/FromFile_EN0108830655M_thumb.jpg" width="200" height="200"/>
          <parameterName>FROM</parameterName>
        </image>
      </inputImages>
      <outputImages>
        <image src="assets/images/ToFile_EN0108830655M_lonseam_cont.jpg" width="496" height="496">
          <brief> Output image for cam2map LONSEAM=CONTINUE</brief>
          <description> This is the output of cam2map demonstrating LONSEAM set
                        to CONT.  Contrast this output with the previous example
                        which was created with the LONSEAM set to AUTO.
          </description>
          <thumbnail caption="Output of cam2map run with LONSEAM=CONTINUE" src="assets/thumbs/ToFile_EN0108830655M_lonseam_cont_thumb.jpg" width="200" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
    </example>

    <example>
      <brief> Demonstrates one of two different ways to use MATCHMAP </brief>
       <description>
         This example is the first of two different runs of <i>cam2map</i>
         demonstrating usage of MATCHMAP.  In both this example and the next,
         MATCHMAP is set to YES.  In this case MAP is an ISIS level 2 image.
         The mapping parameters of the output file will be read from the
         mapping group of the MAP level 2 image.
       </description>
      <terminalInterface>
        <commandLine> from=EN0108827082M.lev1.cub map=EN0108828436M.lev2.cub
                      to=EN0108827082M.lev2.cub matchmap=yes
        </commandLine>
        <description>
          This is the command line used to create the output for the level 2
          image version of the MATCHMAP example.
        </description>
      </terminalInterface>
      <guiInterfaces>
        <guiInterface>
          <image src="assets/images/CAM2MAP_MATCHMAP_IMAGE_GUI.jpeg" width="640" height="1060">
            <brief>
              Example GUI
            </brief>
            <description>
              The top of the GUI reveals parameters filled in for input
              files, output file, and output map resolution. Notice that with
              MATCHMAP checked the remaining output map resolution parameters
              are grayed out to show that they are no longer available for
              input.  All the mapping parameters will be read from the level 2
              image entered for MAP.
            <br></br>
            <br></br>
              The middle of the GUI shows parameters for the
              output map ground range and the longitude seam options.  Under
              the output map ground range section, notice all the parameters
              are grayed out.  These values are all read or computed from the
              parameters in the mapping group of the level 2 image entered as
              the MAP and not allowed to be modified because MATCHMAP=YES.
              The LONSEAM option has been set to AUTO in this example (the
              default).
            <br></br>
            <br></br>
              The bottom of the GUI shows the Options menu.
              The default value for INTERP is selected (CUBICCONVOLUTION).
            </description>
            <thumbnail src="assets/thumbs/CAM2MAP_MATCHMAP_IMAGE_thumb.jpeg" width="200" height="500" caption="cam2map MATCHMAP GUI" />
          </image>
        </guiInterface>

      </guiInterfaces>
      <inputImages>
        <image src="assets/images/FromFile_EN0108827082M.lev1.jpg" width="496" height="496">
          <brief> Input image for MATCHMAP examples</brief>
          <description>
            This is a Messenger narrow angle camera image.
          </description>
          <thumbnail caption=" Input Messenger image" src="assets/thumbs/FromFile_EN0108827082M.lev1_thumb.jpg" width="200" height="200"/>
          <parameterName>FROM</parameterName>
        </image>
        <image src="assets/images/MatchFile_EN0108828436M.lev2.jpg" width="496" height="496">
          <brief> Input image for MATCHMAP examples</brief>
          <description>
            This is a Messenger narrow angle camera image previously projected into an equirectangular map.
          </description>
          <thumbnail caption=" Input level 2 image used for MAP" src="assets/thumbs/MatchFile_EN0108828436M.lev2_thumb.jpg" width="200" height="200"/>
          <parameterName>MAP</parameterName>
        </image>
      </inputImages>
      <outputImages>
        <image src="assets/images/ToFile_EN0108827082M.lev2.jpg" width="496" height="496">
          <brief> Output image for cam2map LONSEAM=AUTO</brief>
          <description> This is the output of cam2map demonstrating the use of
                        MATCHMAP=YES with an ISIS level 2 image as MAP.
                        Contrast this output with the level 2 image used as MAP
                        and with the next example which was also created with
                        MATCHMAP=YES, but uses an ISIS map file as MAP.
          </description>
          <thumbnail caption="Output of cam2map run with MATCHMAP=YES and map file" src="assets/thumbs/ToFile_EN0108827082M.lev2_thumb.jpg" width="200" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
    </example>

    <example>
      <brief> Demonstrates a second way to use MATCHMAP </brief>
       <description>
         This example is the second of two different runs of <i>cam2map</i>
         demonstrating usage of MATCHMAP.  In both this example and the
         previous, MATCHMAP is set to YES. However, in this case MAP is an
         ISIS map file.  The mapping parameters of the output file will
         be read from this map file.
       </description>
      <terminalInterface>
        <commandLine> from=EN0108827082M.lev1.cub map=EN0108828436M.map
                      to=EN0108827082M.lev2.cub matchmap=yes
        </commandLine>
        <description>
          This is the command line used to create the output for the map file
          version of the MATCHMAP example.
        </description>
      </terminalInterface>
      <guiInterfaces>
        <guiInterface>
          <image src="assets/images/CAM2MAP_MATCHMAP_MAPFILE_GUI.jpeg" width="640" height="1060">
            <brief>
              Example GUI
            </brief>
            <description>
              The top of the GUI illustrates parameters filled in for input
              files, output file, and output map resolution. Notice that with
              MATCHMAP checked the remaining output map resolution parameters
              are grayed out to show that they are no longer available for
              input.  All the mapping parameters will be read from the map file.
              The application will throw an error if any required information
              is missing.
            <br></br>
            <br></br>
              The screen shot of the middle of GUI shows the parameters for the
              output map ground range and the longitude seam options.  Under
              the output map ground range section, notice all the parameters
              are grayed out.  These values are all read or computed from the map
              file values and not allowed to be modified because MATCHMAP=YES.
              The LONSEAM option has been set to AUTO in this example (the
              default).
            <br></br>
            <br></br>
              The bottom of the GUI shows the Options menu.
              The default value for INTERP is selected (CUBICCONVOLUTION).
            </description>
            <thumbnail src="assets/thumbs/CAM2MAP_MATCHMAP_MAPFILE_thumb.jpeg" width="200" height="500" caption="cam2map MATCHMAP MAP GUI" />
          </image>
        </guiInterface>
      </guiInterfaces>
      <dataFiles>
        <dataFile path="assets/IN/EN0108828436M.map">
          <brief> Map file </brief>
          <description>
            Input map file defining the desired output map projection.  This
            file is in PVL format.
          </description>
          <parameterName> MAP </parameterName>
        </dataFile>
      </dataFiles>
      <inputImages>
        <image src="assets/images/FromFile_EN0108827082M.lev1.jpg" width="496" height="496">
          <brief> Input image for MATCHMAP examples</brief>
          <description>
            This is a Messenger narrow angle camera image.
          </description>
          <thumbnail caption=" Input Messenger image" src="assets/thumbs/FromFile_EN0108827082M.lev1_thumb.jpg" width="200" height="200"/>
          <parameterName>FROM</parameterName>
        </image>
      </inputImages>
      <outputImages>
        <image src="assets/images/ToFile_EN0108827082M.lev2.jpg" width="496" height="496">
          <brief> Output image for cam2map LONSEAM=AUTO</brief>
          <description> This is the output of cam2map demonstrating the use of
            MATCHMAP=YES with an Isis map file as MAP.  Contrast this output with
            the previous example, which was also created with MATCHMAP=YES, but
            uses an Isis level 2 image  for MAP.
          </description>
          <thumbnail caption="Output of cam2map run with MATCHMAP=YES and map file" src="assets/thumbs/ToFile_EN0108827082M.lev2_thumb.jpg " width="200" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
      </example>

      <example>
      <brief> The following four examples illustrate the effects of the TRIM option </brief>
        <description>
          In the GUI below, <i>cam2map</i> is set up to project the input (level1) image to a (level2)
          projected image. The latitude and longitude ranges are calculated using the CAMERA
          option, but note the trim option is not selected in order to output the full extent of
          the input image. In the example immediately following, the GUI is set up to trim the
          image to a specific latitude and longitude boundary (TRIM=YES).
        </description>
      <terminalInterface>
        <commandLine> from=P01_001489_2688_XI_88N339W.lev1eo.cub
                    map=./npole.map to=no_trim_P01_001489_2688_XI_88N339W.lev1eo.cubSINU18
                    defaultrange=camera
        </commandLine>
        <description>
            This is the command line used to create the output where the original dimensions are preserved.
        </description>
      </terminalInterface>
      <guiInterfaces>
        <guiInterface>
          <image src="assets/images/CAM2MAP_NOTRIM_FULL_GUI.jpeg" width="640" height="1140">
            <brief>
              Example GUI
            </brief>
            <description>
              Screen shot of the entire GUI with parameters filled in for FROM file, TO
              file, default PIXRES, and Output Map Ground Range set to the CAMERA
              of the input cube. The rest of the parameters are all set to the defaults.
            </description>
            <thumbnail src="assets/thumbs/CAM2MAP_NOTRIM_FULL_thumb.jpeg" width="200" height="500" caption="TRIM=NO GUI " />
          </image>
        </guiInterface>
      </guiInterfaces>
      <outputImages>
        <image src="assets/images/CAM2MAP_NOTRIM_OUT.jpg" width="496" height="496">
          <brief> Output image for cam2map TRIM=NO</brief>
          <description> This is the output of cam2map with TRIM turned off.          </description>
          <thumbnail caption="TRIM=NO output" src="assets/thumbs/CAM2MAP_NOTRIM_OUT_thumb.jpg " width="200" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
      </example>
      <example>
      <brief> The following example illustrates what happens to the same data set with TRIM=YES  </brief>
        <description>
            This <i>cam2map</i> GUI  is set up to trim the image to a specific latitude and longitude
            boundary.
        </description>
      <terminalInterface>
        <commandLine> from=P01_001489_2688_XI_88N339W.lev1eo.cub map=./npole.map
                  to=trim2_P01_001489_2688_XI_88N339W.lev1eo.cub  trim=yes  defaultrange=camera
                  minlat=87.3 maxlat=89.11 minlon=8 maxlon=74
        </commandLine>
        <description>
          This is the command line used to create the output where TRIM has been used to trim the image
          to a specific region of interest.
        </description>
      </terminalInterface>
      <guiInterfaces>
        <guiInterface>
          <image src="assets/images/CAM2MAP_TRIM_FULL_GUI.jpeg" width="640" height="1140">
            <brief>
            Example GUI
            </brief>
            <description>
              Screen shot of the entire GUI with parameters filled in for FROM file, TO file, default PIXRES,
              Output Map Ground Range set to the CAMERA of the input cube, TRIM=YES,  and
              MIN/MAX LAT/LON ranges are defined. The rest of the parameters are all set to the defaults.
            </description>
            <thumbnail src="assets/thumbs/CAM2MAP_TRIM_FULL_thumb.jpeg" width="200" height="500" caption="TRIM=YES GUI "/>
          </image>
        </guiInterface>
      </guiInterfaces>
      <outputImages>
        <image src="assets/images/CAM2MAP_TRIM_OUT.jpg" width="496" height="496">
          <brief> Output image for cam2map TRIM=YES</brief>
          <description> This is the output of cam2map with TRIM turned on.          </description>
          <thumbnail caption="TRIM=YES output" src="assets/thumbs/CAM2MAP_TRIM_OUT_thumb.jpg " width="200" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
      </example>

      <example>
      <brief> Potential anomalies using Sinusoidal projections </brief>
        <description>
            Below is a Cassini ISS wide-angle image of Enceladus, in sinusoidal projection. It illustrates the
            anomaly that can happen using certain projections when TRIM=NO. Notice the "duplicated" data.
            The next example will show how to correct this problem.
        </description>
      <terminalInterface>
        <commandLine> from=CISSWA_Enceladus.cub map=sinu180.map
             to=CISSWA_Enceladus_notrim.cub defaultrange=camera
        </commandLine>
        <description>
          The command used to project the level1 image to a sinusodial projection. Notice that the default
          is trim=no, and therefore, is not necessary in the command line.
        </description>
      </terminalInterface>
      <guiInterfaces>
        <guiInterface>
          <image src="assets/images/CAM2MAP_SINU180_NOTRIM_GUI.jpeg" width="640" height="1140">
            <brief>
            Example GUI
            </brief>
            <description>
              Entire <i>cam2map</i> GUI with parameters filled in for FROM file, TO
              file, default PIXRES, and Output Map Ground Range set to the CAMERA
              of the input cube. The rest of the parameters are all set to the defaults.
              Note: the DEFAULT value for the TRIM parameter is NO, and therefore,
              it is not necessary to define TRIM.
            </description>
            <thumbnail src="assets/thumbs/CAM2MAP_SINU180_NOTRIM_GUI_thumb.jpeg" width="200" height="500" caption="TRIM=NO GUI "/>
          </image>
        </guiInterface>
      </guiInterfaces>
      <dataFiles>
        <dataFile path="assets/IN/SINU180_MAP.jpg">
          <brief> Map file </brief>
          <description>
            Input map file defining the attributes of the desired output map projection.  This
            file is in PVL format.
          </description>
          <parameterName> MAP </parameterName>
        </dataFile>
      </dataFiles>
      <outputImages>
        <image src="assets/images/CAM2MAP_SINU180_NOTRIM_OUT.jpeg" width="496" height="496">
          <brief> Output image for cam2map TRIM=NO</brief>
          <description> This is the output of the cam2map Sinusoidal projection with
            TRIM turned off.
          </description>
          <thumbnail caption="TRIM=NO output" src="assets/thumbs/CAM2MAP_SINU180_NOTRIM_OUT_thumb.jpeg " width="200" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
      </example>

      <example>
      <brief> Solution for anomalies using Sinusoidal projections </brief>
        <description>
            Below is the same Cassini ISS wide-angle image of Enceladus used in Example #7. The GUI
            definitions illustrate how to use TRIM to eliminate the duplicated data created by this
            particular projection.
        </description>
      <terminalInterface>
        <commandLine> from=CISSWA_Enceladus.cub map=sinu180.map
             to=CISSWA_Enceladus_notrim.cub defaultrange=camera trim=yes
        </commandLine>
        <description>
          The command used to project the level1 image to a sinusoidal projection.
        </description>
      </terminalInterface>
      <guiInterfaces>
        <guiInterface>
          <image src="assets/images/CAM2MAP_SINU180_TRIM_GUI.jpeg" width="640" height="1140">
            <brief>
            Example GUI
            </brief>
            <description>
              Entire <i>cam2map</i> GUI with parameters filled in for FROM file, TO
              file, default PIXRES, Output Map Ground Range set to the CAMERA
              of the input cube, and TRIM=YES. The rest of the parameters are all set to the defaults.
            </description>
            <thumbnail src="assets/thumbs/CAM2MAP_SINU180_TRIM_GUI_thumb.jpeg" width="200" height="500" caption="TRIM=YES GUI "/>
          </image>
        </guiInterface>
      </guiInterfaces>
      <dataFiles>
        <dataFile path="assets/IN/SINU180_MAP.jpg">
          <brief> Map file </brief>
          <description>
            Input map file defining the attributes of the desired output map projection.  This
            file is in PVL format.
          </description>
          <parameterName> MAP </parameterName>
        </dataFile>
      </dataFiles>
      <outputImages>
        <image src="assets/images/CAM2MAP_SINU180_TRIM_OUT.jpeg" width="496" height="496">
          <brief> Output image for cam2map TRIM=YES</brief>
          <description> This is the output of the cam2map Sinusoidal projection
            with TRIM turned on.
          </description>
          <thumbnail caption="TRIM=YES output" src="assets/thumbs/CAM2MAP_SINU180_TRIM_OUT_thumb.jpeg " width="200" height="200"/>
          <parameterName>TO</parameterName>
        </image>
      </outputImages>
      </example>

   </examples>
</application>
