<?xml version="1.0" encoding="UTF-8"?>
 
<application name="autoseed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://isis.astrogeology.usgs.gov/Schemas/Application/application.xsd">

  <brief>
    Creates a control network for a list of images
  </brief>

  <description>
    <p>
      This program creates a <def>control network</def> for a set of cubes. The program
      uses the footprint overlap information from <i>findimageoverlaps</i> to
      decide where multiple images overlap.
    </p>
    <img src='assets/imageoverlap.png' alt='Image showing how cube footprints overlap' width='667' height='592' />
    <p>
      The figure above shows the outline footprint of three images. They overlap
      in such a way so image #1 and #2 cover some of the same area on the ground,
      image #2 and #3 also cover some of the same area, and all three images,
      #1, #2 and #3, cover the same small area down the middle.
    </p>
    <p>
      The program will create a set of <def>control point</def>s for each
      overlap and will create a <def>control measure</def>s for each image
      the control point falls on. The seeding method defined in the DEFFILE,
      controls the location and density of the control points.
    </p>
    <pre>
Group = PolygonSeederAlgorithm
  Name             = Grid
  MinimumThickness = 0.3
  MinimumArea      = 100000000
  XSpacing         = 10000
  YSpacing         = 10000
End_Group
    </pre>
    <p>
      The seeding definision file above tells <i>autoseed</i> to use an 
      algorithum called "Grid", not to seed points in overlaps with a thickness
      ratio of less than "0.3", not to seed overlaps with an area of less than
      "100000000 square meters", and to space the pattern of points at
      "10000 meters" spacing in both the X and Y directions. For seeding
      algorithum templates see the "$ISISROOT/appdata/templates/autoseed"
      directory.
    </p>
    <img src='assets/imageoverlapctlpts.png' alt='Image showing contorl points generated by autoseed' width='660' height='356' />
    <p>
      The figure above shows the position of the control poinsts generated
      by <i>autoseed</i> as blue "+" using the seeding definision file above.
    </p>
    <p>
      <i>autoseed</i> also has the ability to use an existing control network,
      CNET, to ignore overlaps that contain at least one control point. This
      allows the user to run <i>autoseed</i> multiple times with different
      seeding parameters and algorithms. This can be useful when one run
      fails to seed all the overlaps or overlaps of different size and shape
      need to be seeded differently.
    </p>
    <p>
      ISIS programs that must be run prior to running <i>autoseed</i>:
    </p>
    <ul>
      <li>spiceinit</li>
      <li>footprintint</li>
      <li>findimageoverlaps</li>
    </ul>
  </description>

  <category>
    <categoryItem>Control Networks</categoryItem>
  </category>

  <seeAlso>
    <applications>
      <item>footprintinit</item>
      <item>findimageoverlaps</item>
      <item>pointreg</item>
      <item>seedgrid</item>
    </applications>
  </seeAlso>

  <history>
    <change name="Stuart Sides" date="2005-08-20">
      Original version
    </change>
    <change name="Steven Lambright" date="2007-07-27">
      Changed category from Geometry to Control Networks
    </change>
    <change name="Stuart Sides" date="2008-11-11">
      Removed terminal output code
    </change>
    <change name="Steven Lambright" date="2008-11-24">
      Added the "OVERLAPLIST" parameter.
    </change>
    <change name="Christopher Austin" date="2008-12-18">
      Added the optional CNET parameter and fixed memory leaks.
    </change>
    <change name="Christopher Austin" date="2008-12-22">
      Removed beta status, fixed a bug, and added test.
    </change>
    <change name="Christopher Austin" date="2009-01-26">
      Replaced the cerr output with the ERRORS option.
    </change>
    <change name="Christopher Austin" date="2009-02-09">
      Added the seed definition parameters to the results group of the
      print.prt file
    </change>
    <change name="Christopher Austin" date="2009-03-16">
      Fixed the progress objects.
    </change>
    <change name="Travis Addair" date="2009-08-05">
      Moved seed definition parameters to unique group, and encapsulated the 
      group creation within the seeding objects.
    </change>
    <change name="Travis Addair" date="2009-08-11">
      Added .def filter to the SEEDDEF parameter.
    </change>
    <change name="Christopher Austin" date="2009-10-23">
      Added keywords to the SEEDDEF file which tell autoseed which Control
      Measures to mark as ignored under the keyword's conditions. These new
      keywords include "PixelsFromEdge", "MinEmission", "MaxEmission",
      "MinIncidence", "MaxIncidence", "MinResolution", and "MaxResolution".
      Any Control Point with less than 2 valid measures as a result of these
      keywords will be marked as ignored.
    </change>
    <change name="Christopher Austin" date="2009-11-25">
      Added the keywords "MinDN" and "MaxDN" to the SEEDDEF possibilities.
      Using these keywords will increase runtime. 
    </change>
    <change name="Eric Hyer" date="2010-01-29">
      Added Results group to print.prt
    </change>
    <change name="Christopher Austin" date="2010-03-26">
      Now throws an error if the output Control Net is empty.
    </change>
    <change name="Eric Hyer" date="2010-04-16">
      Added optional parameters to results group.  Also now report invalid
      or unrecognized keywords found in the def file to the user.
    </change>
    <change name="Sharmila Prasad" date="2010-04-28">
      Fixed error while checking for max and min dn values restriction for a 
      valid control point. Ignore control points with special pixel dn values.
    </change>
    <change name="Christopher Austin" date="2010-05-05">
      Adapted to handle seeding in both XY and SampleLine units using the
      optional Seeddef keywork SeedDomain.
    </change>
    <change name="Christopher Austin" date="2010-06-09">
      Added the ControlPointsIgnored and ControlMeasuresIgnored keywords to the
      results group.
    </change>
    <change name="Sharmila Prasad" date="2010-06-30">
      Throw exception, when SetUniversalGround Fails
    </change>
    <change name="Christopher Austin" date="2010-09-27">
      Removed the SetUniversalGround fail exception, and added an exception when
      serial numbers in the overlaps list are not included in the FROMLIST.
    </change>
    <change name="Christopher Austin" date="2011-01-18">
      Altered to compile with the new Control redesign.
    </change>
    <change name="Steven Lambright" date="2011-04-11">
      Changed SEEDDEF to DEFFILE and TO to ONET as per the control network
      standard application parameter names.
    </change>
    <change name="Debbie A. Cook and Tracie Sucharski" date="2011-06-07">
      Changed point type "tie" to "free"
    </change>
    <change name="Travis Addair" date="2011-07-18">
      AprioriSample and AprioriLine are now set to the same values as Sample and
      Line when creating a new Control Measure.
    </change>
    <change name="Stuart Sides" date="2011-09-30">
      Reworked the documentation with Laszlo Kestay and Jac Shinaman
    </change>
    <change name="Debbie A. Cook" date="2012-11-23">
      Changed to use TProjection instead of Projection.  References #775.
    </change>
    <change name="Jeannie Backer" date="2016-04-22">
      Modified code to get TargetRadii using the cube label and mapping group if these
      values can not be found using the TargetName alone. Sets control net using these
      radii values rather than attempting to find them again. 
      References #3892
    </change>
  </history>

  <groups>

    <group name="Files">

      <parameter name="FROMLIST">
        <type>filename</type>
        <fileMode>input</fileMode>
        <brief>
          List of input cubes for which to create a control network
        </brief>
        <description>
          <p>
          Use this parameter to select a filename which contains a list of
          cube filenames. The cubes identified inside this file will be used
          to create the control network. The following is an example of the 
          contents of a typical FROMLIST file:
          </p>
          <pre>
            AS15-M-0582_16b.cub
            AS15-M-0583_16b.cub
            AS15-M-0584_16b.cub
            AS15-M-0585_16b.cub
            AS15-M-0586_16b.cub
            AS15-M-0587_16b.cub
          </pre>
          <p>
            Each file name in a FROMLIST file should be on a separate line.
          </p>
        </description>
        <filter>
          *.lis
        </filter>
      </parameter>

      <parameter name="DEFFILE">
        <type>filename</type>
        <fileMode>input</fileMode>
        <brief>
          PVL file containing the definition of the autoseeding algorithm
        </brief>
        <description>
          Use this parameter to select the filename which contains the
          definition of the seeding to be preformed. This file
          must contain a valid autoseed plugin definition in PVL format.
        </description>
        <filter>
          *.api *.def
        </filter>
      </parameter>

      <parameter name="OVERLAPLIST">
        <type>filename</type>
        <fileMode>input</fileMode>
        <brief>
          Input cube overlap list
        </brief>
        <description>
          Use this parameter to select the file name which contains the overlap
          polygons to be seeded with control points. The overlap polygons
          can be derived by the <i>findimageoverlaps</i> application.
        </description>
      </parameter>

      <parameter name="CNET">
        <type>filename</type>
        <fileMode>input</fileMode>
        <internalDefault>No previous control network</internalDefault>
        <brief>Control network containing existing control points and measures</brief>
        <description>
          <p>
            Use this parameter to provide the file name of an existing control
            network. The control measures in this network should correspond
            to the cubes in the FROMLIST. If any control point from this
            network falls inside one of the overlaps listed in 
            <i>OVERLAPLIST</i> that overlap will be ignored (i.e., not seeded)
          </p>
          <p>
            To combine the existing network (CNET) with the one created by 
            <i>autoseed</i> (ONET) use the <i>cnetmerge</i> application.
          </p>
        </description>
        <filter> *.net </filter>
      </parameter>

      <parameter name="ONET">
        <type>filename</type>
        <fileMode>output</fileMode>
        <brief>
          Output control network
        </brief>
        <description>
          This file will contain the output control network.
        </description>
      </parameter>

      <parameter name="ERRORS">
        <type>filename</type>
        <fileMode>output</fileMode>
        <internalDefault>No Error Output</internalDefault>
        <brief>
          Errors generated while seeding the overlaps
        </brief>
        <description>
          This file will contain the errors that occurred while seeding the
          overlaps. Including:
          <ul>
            <li>Overlap areas where no points where seeded</li>
          </ul>
        </description>
      </parameter>

    </group>

    <group name="Control">

      <parameter name="NETWORKID">
        <type>string</type>
        <brief>
            Name of this control network
        </brief>
        <description>
            The ID or name of this particular control network. This string
            will be added to the ouput control network file, and can be used
            by you to identify the network.
        </description>
      </parameter>

      <parameter name="POINTID">
        <type>string</type>
        <brief>
            The pattern to be used to create point ids.
        </brief>
        <description>
          <p>
            This string will be used to create unique IDs for each control
            point created by this program. The string must contain a
            single series
            of question marks ("?"). For example: "VallesMarineris????"
          </p>
          <p>
            The question marks will be replaced
            with a number beginning with zero and incremented by one each time
            a new control point is created. The example above would cause the
            first control point to have an ID of "VallesMarineris0000", the
            second ID would be "VallesMarineris0001" and so on.
            The maximum number of new control points for this example would be
            10000 with the final ID being "VallesMarineris9999".
          </p>
          <p>
            Note: Make sure there are enough "?"s for all the control
            points that might be created during this run. If all the possible
            point IDs are exausted the program will exit with an error, and 
            will not produce an output control network file. The number of
            control points created depends on the size and quantity of 
            image overlaps and the density of control points as defined
            by the DEFFILE parameter. 
          </p>
          <p>
            Examples of POINTID:
          </p>
          <ul>
            <li>POINTID="JohnDoe?????"</li>
            <li>POINTID="Quad1_????></li>
            <li>POINTID="JD_???_test1"</li>
          </ul>
        </description>
      </parameter>

      <parameter name="DESCRIPTION">
        <type>string</type>
        <brief>
            The description of the network.
        </brief>
        <description>
            A text description of the contents of the output control network.
            The text can contain anything the user wants. For example it 
            could be used to describe the area of interest the control network
            is being made for. 
        </description>
      </parameter>

    </group>

  </groups>

</application>
