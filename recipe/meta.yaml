# When building ISIS for a public release, be sure that these variables are properly set to reflect
# your current build. Keep in mind that these values are how conda build names its .tar.bz2 build
# file, and so must be unique to other builds sitting in the USGS-Astrogeology channel on Anaconda
# Cloud, or they will be overwritten when you upload this current build. It is always a good idea to
# confirm that you will not be overwriting a file that has already been uploaded by checking the
# channel before building.

# Also keep in mind that there must already be a Release or a Tag by the name <version>_<build_number>
# on the USGS-Astrogeology/ISIS3 repo before invoking the conda build system as this will pull the
# tar.gz of that name to build. After pushing changes for a release build (so as to
# include these changes in the release), but before building using the conda build system, be
# sure to create this Release or Tag.

# This is the version of ISIS that you are building. (Please refer to
# RFC2 (https://github.com/USGS-Astrogeology/ISIS3/wiki/RFC2:-Release-Process) if you are not sure
# about what version you are building.)
# Examples:
#       A Public Release for ISIS3.6.1:                        {% set version = "3.6.1" %}
#       A Release Candidate for ISIS3.6.1:                     {% set version = "3.6.1_RC" %}
#       A custom build of ISIS3.6.1 for the CaSSIS mission:    {% set version = "3.6.1_cassis" %}
{% set version = "dev" %}

# This is the build number for the current version you are building. If this is the first build of
# this version, the build number will be 0. It is incremented by 1 with every consecutive build of
# the same version.
{% set build_number = "0" %}

package:
  name: isis
  version: {{ version }}

source:
  git_url: 'https://github.com/USGS-Astrogeology/ISIS3.git'
  git_tag: {{ version }}

  # url: 'https://github.com/USGS-Astrogeology/ISIS3/archive/{{ version }}.tar.gz'
  # sha256 is the prefered checksum -- you can get it for a file with:
  # `openssl sha256 <file name>`. Simply run this command with the .tar.gz
  # file specified in the "url" tag above.
  # sha256: '62b88bec88471588feb581e28afc2aa9248bd4e165ad83c448a4c5fa7b59a6e1'

build:
  number: {{ build_number }}

# Shotgun strat on requirements until we can narrow them down
requirements:
  build:
   - ale=0.8.6
   - armadillo
   - boost=1.72
   - boost-cpp=1.72
   - blas
   - usgs-astrogeology::bullet
   - bz2file
   - bzip2
   - cmake>=3.15
   - cspice
   - csm>=3.0.3,<3.0.4
   - curl
   - doxygen
   - eigen<3.4
   - embree
   - ffmpeg
   - geos>=3.7,<3.8
   - geotiff
   - gmp
   - graphviz
   - gsl>=2.6
   - hdf5
   - icu
   - inja
   - jama
   - jpeg
   - usgs-astrogeology::kakadu==1
   - krb5
   - libopencv>=4.5.2
   - libpng>=1.6.34
   - libprotobuf
   - libtiff>=4.0
   - libxml2
   - make
   - mesalib
   - mysql
   - mysql-connector-c
   - nanoflann<1.4
   - nlohmann_json
   - ninja==1.7.2
   - nn
   - opencv>=4.5.2
   - openssl>=1.1.1k
   - pcl>=1.10.0
   - protobuf
   - python>=3.7.11
   - qhull
   - qt>=5.9.6
   - qwt
   - sqlite
   - suitesparse
   - superlu
   - swig
   - tnt
   - x264
   - xalan-c
   - xerces-c=3
   - xorg-kbproto
   - xorg-libice
   - xorg-libsm
   - xorg-libx11
   - xorg-libxi
   - zlib

  run:
  - {{ pin_compatible('ale') }}
  - {{ pin_compatible('boost', max_pin='x.x') }}
  - blas
  - {{ pin_compatible('bullet', max_pin='x.x') }}
  - bz2file
  - csm
  - cspice
  - curl
  - eigen
  - embree
  - {{ pin_compatible('ffmpeg', min_pin='x.x') }}
  - {{ pin_compatible('geos', min_pin='x.x', max_pin='x.x') }}
  - {{ pin_compatible('geotiff', max_pin='x.x') }}
  - geotiff
  - gmm
  - {{ pin_compatible('gsl', min_pin='x.x') }}
  - hdf5
  - icu
  - inja
  - jama
  - {{ pin_compatible('jasper', max_pin='x.x') }}
  - {{ pin_compatible('jpeg', max_pin='x') }}
  - {{ pin_compatible('kakadu', max_pin='x') }}
  - {{ pin_compatible('libpng') }}
  - mesalib
  - mysql
  - nanoflann
  - nlohmann_json
  - nn
  - {{ pin_compatible('opencv', max_pin='x.x') }}
  - {{ pin_compatible('openssl', min_pin='x', max_pin='x.x') }}
  - pcl
  - {{ pin_compatible('protobuf', max_pin='x.x') }}
  - qhull
  - {{ pin_compatible('qt', max_pin='x.x') }}
  - {{ pin_compatible('qwt', max_pin='x.x') }}
  - superlu
  - tnt
  - x264
  - {{ pin_compatible('xerces-c', max_pin='x.x.x') }}
  - xorg-kbproto
  - xorg-libice
  - xorg-libsm
  - xorg-libx11
  - xorg-libxi

test:
  commands:
    - test -e $PREFIX/lib/libisis${SHLIB_EXT}
    - test -e $PREFIX/include/isis/Isis.h
    - test -e $PREFIX/bin/isisimport
    - ISISROOT=$PREFIX isisimport -HELP
 

about:
  home: https://github.com/USGS-Astrogeology/ISIS3
  license: CC0-1.0
  license_file: LICENSE.md
  summary: "Integrated Software for Imagers and Spectrometers"
